/*
Radarr

Radarr API docs

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package whisparr

import (
	"encoding/json"
	"time"
)

// MovieMetadata struct for MovieMetadata
type MovieMetadata struct {
	Id *int32 `json:"id,omitempty"`
	TmdbId *int32 `json:"tmdbId,omitempty"`
	Images []*MediaCover `json:"images,omitempty"`
	Genres []*string `json:"genres,omitempty"`
	InCinemas NullableTime `json:"inCinemas,omitempty"`
	PhysicalRelease NullableTime `json:"physicalRelease,omitempty"`
	DigitalRelease NullableTime `json:"digitalRelease,omitempty"`
	Certification NullableString `json:"certification,omitempty"`
	Year *int32 `json:"year,omitempty"`
	Ratings *Ratings `json:"ratings,omitempty"`
	CollectionTmdbId *int32 `json:"collectionTmdbId,omitempty"`
	CollectionTitle NullableString `json:"collectionTitle,omitempty"`
	LastInfoSync NullableTime `json:"lastInfoSync,omitempty"`
	Runtime *int32 `json:"runtime,omitempty"`
	Website NullableString `json:"website,omitempty"`
	ImdbId NullableString `json:"imdbId,omitempty"`
	Title NullableString `json:"title,omitempty"`
	CleanTitle NullableString `json:"cleanTitle,omitempty"`
	SortTitle NullableString `json:"sortTitle,omitempty"`
	Status *MovieStatusType `json:"status,omitempty"`
	Overview NullableString `json:"overview,omitempty"`
	AlternativeTitles []*AlternativeTitle `json:"alternativeTitles,omitempty"`
	Translations []*MovieTranslation `json:"translations,omitempty"`
	SecondaryYear NullableInt32 `json:"secondaryYear,omitempty"`
	YouTubeTrailerId NullableString `json:"youTubeTrailerId,omitempty"`
	Studio NullableString `json:"studio,omitempty"`
	OriginalTitle NullableString `json:"originalTitle,omitempty"`
	CleanOriginalTitle NullableString `json:"cleanOriginalTitle,omitempty"`
	OriginalLanguage *Language `json:"originalLanguage,omitempty"`
	Recommendations []*int32 `json:"recommendations,omitempty"`
	Popularity *float32 `json:"popularity,omitempty"`
	IsRecentMovie *bool `json:"isRecentMovie,omitempty"`
}

// NewMovieMetadata instantiates a new MovieMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMovieMetadata() *MovieMetadata {
	this := MovieMetadata{}
	return &this
}

// NewMovieMetadataWithDefaults instantiates a new MovieMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMovieMetadataWithDefaults() *MovieMetadata {
	this := MovieMetadata{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MovieMetadata) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MovieMetadata) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MovieMetadata) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MovieMetadata) SetId(v int32) {
	o.Id = &v
}

// GetTmdbId returns the TmdbId field value if set, zero value otherwise.
func (o *MovieMetadata) GetTmdbId() int32 {
	if o == nil || isNil(o.TmdbId) {
		var ret int32
		return ret
	}
	return *o.TmdbId
}

// GetTmdbIdOk returns a tuple with the TmdbId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MovieMetadata) GetTmdbIdOk() (*int32, bool) {
	if o == nil || isNil(o.TmdbId) {
    return nil, false
	}
	return o.TmdbId, true
}

// HasTmdbId returns a boolean if a field has been set.
func (o *MovieMetadata) HasTmdbId() bool {
	if o != nil && !isNil(o.TmdbId) {
		return true
	}

	return false
}

// SetTmdbId gets a reference to the given int32 and assigns it to the TmdbId field.
func (o *MovieMetadata) SetTmdbId(v int32) {
	o.TmdbId = &v
}

// GetImages returns the Images field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetImages() []*MediaCover {
	if o == nil {
		var ret []*MediaCover
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetImagesOk() ([]*MediaCover, bool) {
	if o == nil || isNil(o.Images) {
    return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *MovieMetadata) HasImages() bool {
	if o != nil && isNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []MediaCover and assigns it to the Images field.
func (o *MovieMetadata) SetImages(v []*MediaCover) {
	o.Images = v
}

// GetGenres returns the Genres field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetGenres() []*string {
	if o == nil {
		var ret []*string
		return ret
	}
	return o.Genres
}

// GetGenresOk returns a tuple with the Genres field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetGenresOk() ([]*string, bool) {
	if o == nil || isNil(o.Genres) {
    return nil, false
	}
	return o.Genres, true
}

// HasGenres returns a boolean if a field has been set.
func (o *MovieMetadata) HasGenres() bool {
	if o != nil && isNil(o.Genres) {
		return true
	}

	return false
}

// SetGenres gets a reference to the given []string and assigns it to the Genres field.
func (o *MovieMetadata) SetGenres(v []*string) {
	o.Genres = v
}

// GetInCinemas returns the InCinemas field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetInCinemas() time.Time {
	if o == nil || isNil(o.InCinemas.Get()) {
		var ret time.Time
		return ret
	}
	return *o.InCinemas.Get()
}

// GetInCinemasOk returns a tuple with the InCinemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetInCinemasOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.InCinemas.Get(), o.InCinemas.IsSet()
}

// HasInCinemas returns a boolean if a field has been set.
func (o *MovieMetadata) HasInCinemas() bool {
	if o != nil && o.InCinemas.IsSet() {
		return true
	}

	return false
}

// SetInCinemas gets a reference to the given NullableTime and assigns it to the InCinemas field.
func (o *MovieMetadata) SetInCinemas(v time.Time) {
	o.InCinemas.Set(&v)
}
// SetInCinemasNil sets the value for InCinemas to be an explicit nil
func (o *MovieMetadata) SetInCinemasNil() {
	o.InCinemas.Set(nil)
}

// UnsetInCinemas ensures that no value is present for InCinemas, not even an explicit nil
func (o *MovieMetadata) UnsetInCinemas() {
	o.InCinemas.Unset()
}

// GetPhysicalRelease returns the PhysicalRelease field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetPhysicalRelease() time.Time {
	if o == nil || isNil(o.PhysicalRelease.Get()) {
		var ret time.Time
		return ret
	}
	return *o.PhysicalRelease.Get()
}

// GetPhysicalReleaseOk returns a tuple with the PhysicalRelease field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetPhysicalReleaseOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.PhysicalRelease.Get(), o.PhysicalRelease.IsSet()
}

// HasPhysicalRelease returns a boolean if a field has been set.
func (o *MovieMetadata) HasPhysicalRelease() bool {
	if o != nil && o.PhysicalRelease.IsSet() {
		return true
	}

	return false
}

// SetPhysicalRelease gets a reference to the given NullableTime and assigns it to the PhysicalRelease field.
func (o *MovieMetadata) SetPhysicalRelease(v time.Time) {
	o.PhysicalRelease.Set(&v)
}
// SetPhysicalReleaseNil sets the value for PhysicalRelease to be an explicit nil
func (o *MovieMetadata) SetPhysicalReleaseNil() {
	o.PhysicalRelease.Set(nil)
}

// UnsetPhysicalRelease ensures that no value is present for PhysicalRelease, not even an explicit nil
func (o *MovieMetadata) UnsetPhysicalRelease() {
	o.PhysicalRelease.Unset()
}

// GetDigitalRelease returns the DigitalRelease field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetDigitalRelease() time.Time {
	if o == nil || isNil(o.DigitalRelease.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DigitalRelease.Get()
}

// GetDigitalReleaseOk returns a tuple with the DigitalRelease field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetDigitalReleaseOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.DigitalRelease.Get(), o.DigitalRelease.IsSet()
}

// HasDigitalRelease returns a boolean if a field has been set.
func (o *MovieMetadata) HasDigitalRelease() bool {
	if o != nil && o.DigitalRelease.IsSet() {
		return true
	}

	return false
}

// SetDigitalRelease gets a reference to the given NullableTime and assigns it to the DigitalRelease field.
func (o *MovieMetadata) SetDigitalRelease(v time.Time) {
	o.DigitalRelease.Set(&v)
}
// SetDigitalReleaseNil sets the value for DigitalRelease to be an explicit nil
func (o *MovieMetadata) SetDigitalReleaseNil() {
	o.DigitalRelease.Set(nil)
}

// UnsetDigitalRelease ensures that no value is present for DigitalRelease, not even an explicit nil
func (o *MovieMetadata) UnsetDigitalRelease() {
	o.DigitalRelease.Unset()
}

// GetCertification returns the Certification field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetCertification() string {
	if o == nil || isNil(o.Certification.Get()) {
		var ret string
		return ret
	}
	return *o.Certification.Get()
}

// GetCertificationOk returns a tuple with the Certification field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetCertificationOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Certification.Get(), o.Certification.IsSet()
}

// HasCertification returns a boolean if a field has been set.
func (o *MovieMetadata) HasCertification() bool {
	if o != nil && o.Certification.IsSet() {
		return true
	}

	return false
}

// SetCertification gets a reference to the given NullableString and assigns it to the Certification field.
func (o *MovieMetadata) SetCertification(v string) {
	o.Certification.Set(&v)
}
// SetCertificationNil sets the value for Certification to be an explicit nil
func (o *MovieMetadata) SetCertificationNil() {
	o.Certification.Set(nil)
}

// UnsetCertification ensures that no value is present for Certification, not even an explicit nil
func (o *MovieMetadata) UnsetCertification() {
	o.Certification.Unset()
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *MovieMetadata) GetYear() int32 {
	if o == nil || isNil(o.Year) {
		var ret int32
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MovieMetadata) GetYearOk() (*int32, bool) {
	if o == nil || isNil(o.Year) {
    return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *MovieMetadata) HasYear() bool {
	if o != nil && !isNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given int32 and assigns it to the Year field.
func (o *MovieMetadata) SetYear(v int32) {
	o.Year = &v
}

// GetRatings returns the Ratings field value if set, zero value otherwise.
func (o *MovieMetadata) GetRatings() Ratings {
	if o == nil || isNil(o.Ratings) {
		var ret Ratings
		return ret
	}
	return *o.Ratings
}

// GetRatingsOk returns a tuple with the Ratings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MovieMetadata) GetRatingsOk() (*Ratings, bool) {
	if o == nil || isNil(o.Ratings) {
    return nil, false
	}
	return o.Ratings, true
}

// HasRatings returns a boolean if a field has been set.
func (o *MovieMetadata) HasRatings() bool {
	if o != nil && !isNil(o.Ratings) {
		return true
	}

	return false
}

// SetRatings gets a reference to the given Ratings and assigns it to the Ratings field.
func (o *MovieMetadata) SetRatings(v Ratings) {
	o.Ratings = &v
}

// GetCollectionTmdbId returns the CollectionTmdbId field value if set, zero value otherwise.
func (o *MovieMetadata) GetCollectionTmdbId() int32 {
	if o == nil || isNil(o.CollectionTmdbId) {
		var ret int32
		return ret
	}
	return *o.CollectionTmdbId
}

// GetCollectionTmdbIdOk returns a tuple with the CollectionTmdbId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MovieMetadata) GetCollectionTmdbIdOk() (*int32, bool) {
	if o == nil || isNil(o.CollectionTmdbId) {
    return nil, false
	}
	return o.CollectionTmdbId, true
}

// HasCollectionTmdbId returns a boolean if a field has been set.
func (o *MovieMetadata) HasCollectionTmdbId() bool {
	if o != nil && !isNil(o.CollectionTmdbId) {
		return true
	}

	return false
}

// SetCollectionTmdbId gets a reference to the given int32 and assigns it to the CollectionTmdbId field.
func (o *MovieMetadata) SetCollectionTmdbId(v int32) {
	o.CollectionTmdbId = &v
}

// GetCollectionTitle returns the CollectionTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetCollectionTitle() string {
	if o == nil || isNil(o.CollectionTitle.Get()) {
		var ret string
		return ret
	}
	return *o.CollectionTitle.Get()
}

// GetCollectionTitleOk returns a tuple with the CollectionTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetCollectionTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.CollectionTitle.Get(), o.CollectionTitle.IsSet()
}

// HasCollectionTitle returns a boolean if a field has been set.
func (o *MovieMetadata) HasCollectionTitle() bool {
	if o != nil && o.CollectionTitle.IsSet() {
		return true
	}

	return false
}

// SetCollectionTitle gets a reference to the given NullableString and assigns it to the CollectionTitle field.
func (o *MovieMetadata) SetCollectionTitle(v string) {
	o.CollectionTitle.Set(&v)
}
// SetCollectionTitleNil sets the value for CollectionTitle to be an explicit nil
func (o *MovieMetadata) SetCollectionTitleNil() {
	o.CollectionTitle.Set(nil)
}

// UnsetCollectionTitle ensures that no value is present for CollectionTitle, not even an explicit nil
func (o *MovieMetadata) UnsetCollectionTitle() {
	o.CollectionTitle.Unset()
}

// GetLastInfoSync returns the LastInfoSync field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetLastInfoSync() time.Time {
	if o == nil || isNil(o.LastInfoSync.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastInfoSync.Get()
}

// GetLastInfoSyncOk returns a tuple with the LastInfoSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetLastInfoSyncOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.LastInfoSync.Get(), o.LastInfoSync.IsSet()
}

// HasLastInfoSync returns a boolean if a field has been set.
func (o *MovieMetadata) HasLastInfoSync() bool {
	if o != nil && o.LastInfoSync.IsSet() {
		return true
	}

	return false
}

// SetLastInfoSync gets a reference to the given NullableTime and assigns it to the LastInfoSync field.
func (o *MovieMetadata) SetLastInfoSync(v time.Time) {
	o.LastInfoSync.Set(&v)
}
// SetLastInfoSyncNil sets the value for LastInfoSync to be an explicit nil
func (o *MovieMetadata) SetLastInfoSyncNil() {
	o.LastInfoSync.Set(nil)
}

// UnsetLastInfoSync ensures that no value is present for LastInfoSync, not even an explicit nil
func (o *MovieMetadata) UnsetLastInfoSync() {
	o.LastInfoSync.Unset()
}

// GetRuntime returns the Runtime field value if set, zero value otherwise.
func (o *MovieMetadata) GetRuntime() int32 {
	if o == nil || isNil(o.Runtime) {
		var ret int32
		return ret
	}
	return *o.Runtime
}

// GetRuntimeOk returns a tuple with the Runtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MovieMetadata) GetRuntimeOk() (*int32, bool) {
	if o == nil || isNil(o.Runtime) {
    return nil, false
	}
	return o.Runtime, true
}

// HasRuntime returns a boolean if a field has been set.
func (o *MovieMetadata) HasRuntime() bool {
	if o != nil && !isNil(o.Runtime) {
		return true
	}

	return false
}

// SetRuntime gets a reference to the given int32 and assigns it to the Runtime field.
func (o *MovieMetadata) SetRuntime(v int32) {
	o.Runtime = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetWebsite() string {
	if o == nil || isNil(o.Website.Get()) {
		var ret string
		return ret
	}
	return *o.Website.Get()
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetWebsiteOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Website.Get(), o.Website.IsSet()
}

// HasWebsite returns a boolean if a field has been set.
func (o *MovieMetadata) HasWebsite() bool {
	if o != nil && o.Website.IsSet() {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given NullableString and assigns it to the Website field.
func (o *MovieMetadata) SetWebsite(v string) {
	o.Website.Set(&v)
}
// SetWebsiteNil sets the value for Website to be an explicit nil
func (o *MovieMetadata) SetWebsiteNil() {
	o.Website.Set(nil)
}

// UnsetWebsite ensures that no value is present for Website, not even an explicit nil
func (o *MovieMetadata) UnsetWebsite() {
	o.Website.Unset()
}

// GetImdbId returns the ImdbId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetImdbId() string {
	if o == nil || isNil(o.ImdbId.Get()) {
		var ret string
		return ret
	}
	return *o.ImdbId.Get()
}

// GetImdbIdOk returns a tuple with the ImdbId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetImdbIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ImdbId.Get(), o.ImdbId.IsSet()
}

// HasImdbId returns a boolean if a field has been set.
func (o *MovieMetadata) HasImdbId() bool {
	if o != nil && o.ImdbId.IsSet() {
		return true
	}

	return false
}

// SetImdbId gets a reference to the given NullableString and assigns it to the ImdbId field.
func (o *MovieMetadata) SetImdbId(v string) {
	o.ImdbId.Set(&v)
}
// SetImdbIdNil sets the value for ImdbId to be an explicit nil
func (o *MovieMetadata) SetImdbIdNil() {
	o.ImdbId.Set(nil)
}

// UnsetImdbId ensures that no value is present for ImdbId, not even an explicit nil
func (o *MovieMetadata) UnsetImdbId() {
	o.ImdbId.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetTitle() string {
	if o == nil || isNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *MovieMetadata) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *MovieMetadata) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *MovieMetadata) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *MovieMetadata) UnsetTitle() {
	o.Title.Unset()
}

// GetCleanTitle returns the CleanTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetCleanTitle() string {
	if o == nil || isNil(o.CleanTitle.Get()) {
		var ret string
		return ret
	}
	return *o.CleanTitle.Get()
}

// GetCleanTitleOk returns a tuple with the CleanTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetCleanTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.CleanTitle.Get(), o.CleanTitle.IsSet()
}

// HasCleanTitle returns a boolean if a field has been set.
func (o *MovieMetadata) HasCleanTitle() bool {
	if o != nil && o.CleanTitle.IsSet() {
		return true
	}

	return false
}

// SetCleanTitle gets a reference to the given NullableString and assigns it to the CleanTitle field.
func (o *MovieMetadata) SetCleanTitle(v string) {
	o.CleanTitle.Set(&v)
}
// SetCleanTitleNil sets the value for CleanTitle to be an explicit nil
func (o *MovieMetadata) SetCleanTitleNil() {
	o.CleanTitle.Set(nil)
}

// UnsetCleanTitle ensures that no value is present for CleanTitle, not even an explicit nil
func (o *MovieMetadata) UnsetCleanTitle() {
	o.CleanTitle.Unset()
}

// GetSortTitle returns the SortTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetSortTitle() string {
	if o == nil || isNil(o.SortTitle.Get()) {
		var ret string
		return ret
	}
	return *o.SortTitle.Get()
}

// GetSortTitleOk returns a tuple with the SortTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetSortTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.SortTitle.Get(), o.SortTitle.IsSet()
}

// HasSortTitle returns a boolean if a field has been set.
func (o *MovieMetadata) HasSortTitle() bool {
	if o != nil && o.SortTitle.IsSet() {
		return true
	}

	return false
}

// SetSortTitle gets a reference to the given NullableString and assigns it to the SortTitle field.
func (o *MovieMetadata) SetSortTitle(v string) {
	o.SortTitle.Set(&v)
}
// SetSortTitleNil sets the value for SortTitle to be an explicit nil
func (o *MovieMetadata) SetSortTitleNil() {
	o.SortTitle.Set(nil)
}

// UnsetSortTitle ensures that no value is present for SortTitle, not even an explicit nil
func (o *MovieMetadata) UnsetSortTitle() {
	o.SortTitle.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MovieMetadata) GetStatus() MovieStatusType {
	if o == nil || isNil(o.Status) {
		var ret MovieStatusType
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MovieMetadata) GetStatusOk() (*MovieStatusType, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MovieMetadata) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given MovieStatusType and assigns it to the Status field.
func (o *MovieMetadata) SetStatus(v MovieStatusType) {
	o.Status = &v
}

// GetOverview returns the Overview field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetOverview() string {
	if o == nil || isNil(o.Overview.Get()) {
		var ret string
		return ret
	}
	return *o.Overview.Get()
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetOverviewOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Overview.Get(), o.Overview.IsSet()
}

// HasOverview returns a boolean if a field has been set.
func (o *MovieMetadata) HasOverview() bool {
	if o != nil && o.Overview.IsSet() {
		return true
	}

	return false
}

// SetOverview gets a reference to the given NullableString and assigns it to the Overview field.
func (o *MovieMetadata) SetOverview(v string) {
	o.Overview.Set(&v)
}
// SetOverviewNil sets the value for Overview to be an explicit nil
func (o *MovieMetadata) SetOverviewNil() {
	o.Overview.Set(nil)
}

// UnsetOverview ensures that no value is present for Overview, not even an explicit nil
func (o *MovieMetadata) UnsetOverview() {
	o.Overview.Unset()
}

// GetAlternativeTitles returns the AlternativeTitles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetAlternativeTitles() []*AlternativeTitle {
	if o == nil {
		var ret []*AlternativeTitle
		return ret
	}
	return o.AlternativeTitles
}

// GetAlternativeTitlesOk returns a tuple with the AlternativeTitles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetAlternativeTitlesOk() ([]*AlternativeTitle, bool) {
	if o == nil || isNil(o.AlternativeTitles) {
    return nil, false
	}
	return o.AlternativeTitles, true
}

// HasAlternativeTitles returns a boolean if a field has been set.
func (o *MovieMetadata) HasAlternativeTitles() bool {
	if o != nil && isNil(o.AlternativeTitles) {
		return true
	}

	return false
}

// SetAlternativeTitles gets a reference to the given []AlternativeTitle and assigns it to the AlternativeTitles field.
func (o *MovieMetadata) SetAlternativeTitles(v []*AlternativeTitle) {
	o.AlternativeTitles = v
}

// GetTranslations returns the Translations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetTranslations() []*MovieTranslation {
	if o == nil {
		var ret []*MovieTranslation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetTranslationsOk() ([]*MovieTranslation, bool) {
	if o == nil || isNil(o.Translations) {
    return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *MovieMetadata) HasTranslations() bool {
	if o != nil && isNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []MovieTranslation and assigns it to the Translations field.
func (o *MovieMetadata) SetTranslations(v []*MovieTranslation) {
	o.Translations = v
}

// GetSecondaryYear returns the SecondaryYear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetSecondaryYear() int32 {
	if o == nil || isNil(o.SecondaryYear.Get()) {
		var ret int32
		return ret
	}
	return *o.SecondaryYear.Get()
}

// GetSecondaryYearOk returns a tuple with the SecondaryYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetSecondaryYearOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.SecondaryYear.Get(), o.SecondaryYear.IsSet()
}

// HasSecondaryYear returns a boolean if a field has been set.
func (o *MovieMetadata) HasSecondaryYear() bool {
	if o != nil && o.SecondaryYear.IsSet() {
		return true
	}

	return false
}

// SetSecondaryYear gets a reference to the given NullableInt32 and assigns it to the SecondaryYear field.
func (o *MovieMetadata) SetSecondaryYear(v int32) {
	o.SecondaryYear.Set(&v)
}
// SetSecondaryYearNil sets the value for SecondaryYear to be an explicit nil
func (o *MovieMetadata) SetSecondaryYearNil() {
	o.SecondaryYear.Set(nil)
}

// UnsetSecondaryYear ensures that no value is present for SecondaryYear, not even an explicit nil
func (o *MovieMetadata) UnsetSecondaryYear() {
	o.SecondaryYear.Unset()
}

// GetYouTubeTrailerId returns the YouTubeTrailerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetYouTubeTrailerId() string {
	if o == nil || isNil(o.YouTubeTrailerId.Get()) {
		var ret string
		return ret
	}
	return *o.YouTubeTrailerId.Get()
}

// GetYouTubeTrailerIdOk returns a tuple with the YouTubeTrailerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetYouTubeTrailerIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.YouTubeTrailerId.Get(), o.YouTubeTrailerId.IsSet()
}

// HasYouTubeTrailerId returns a boolean if a field has been set.
func (o *MovieMetadata) HasYouTubeTrailerId() bool {
	if o != nil && o.YouTubeTrailerId.IsSet() {
		return true
	}

	return false
}

// SetYouTubeTrailerId gets a reference to the given NullableString and assigns it to the YouTubeTrailerId field.
func (o *MovieMetadata) SetYouTubeTrailerId(v string) {
	o.YouTubeTrailerId.Set(&v)
}
// SetYouTubeTrailerIdNil sets the value for YouTubeTrailerId to be an explicit nil
func (o *MovieMetadata) SetYouTubeTrailerIdNil() {
	o.YouTubeTrailerId.Set(nil)
}

// UnsetYouTubeTrailerId ensures that no value is present for YouTubeTrailerId, not even an explicit nil
func (o *MovieMetadata) UnsetYouTubeTrailerId() {
	o.YouTubeTrailerId.Unset()
}

// GetStudio returns the Studio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetStudio() string {
	if o == nil || isNil(o.Studio.Get()) {
		var ret string
		return ret
	}
	return *o.Studio.Get()
}

// GetStudioOk returns a tuple with the Studio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetStudioOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Studio.Get(), o.Studio.IsSet()
}

// HasStudio returns a boolean if a field has been set.
func (o *MovieMetadata) HasStudio() bool {
	if o != nil && o.Studio.IsSet() {
		return true
	}

	return false
}

// SetStudio gets a reference to the given NullableString and assigns it to the Studio field.
func (o *MovieMetadata) SetStudio(v string) {
	o.Studio.Set(&v)
}
// SetStudioNil sets the value for Studio to be an explicit nil
func (o *MovieMetadata) SetStudioNil() {
	o.Studio.Set(nil)
}

// UnsetStudio ensures that no value is present for Studio, not even an explicit nil
func (o *MovieMetadata) UnsetStudio() {
	o.Studio.Unset()
}

// GetOriginalTitle returns the OriginalTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetOriginalTitle() string {
	if o == nil || isNil(o.OriginalTitle.Get()) {
		var ret string
		return ret
	}
	return *o.OriginalTitle.Get()
}

// GetOriginalTitleOk returns a tuple with the OriginalTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetOriginalTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.OriginalTitle.Get(), o.OriginalTitle.IsSet()
}

// HasOriginalTitle returns a boolean if a field has been set.
func (o *MovieMetadata) HasOriginalTitle() bool {
	if o != nil && o.OriginalTitle.IsSet() {
		return true
	}

	return false
}

// SetOriginalTitle gets a reference to the given NullableString and assigns it to the OriginalTitle field.
func (o *MovieMetadata) SetOriginalTitle(v string) {
	o.OriginalTitle.Set(&v)
}
// SetOriginalTitleNil sets the value for OriginalTitle to be an explicit nil
func (o *MovieMetadata) SetOriginalTitleNil() {
	o.OriginalTitle.Set(nil)
}

// UnsetOriginalTitle ensures that no value is present for OriginalTitle, not even an explicit nil
func (o *MovieMetadata) UnsetOriginalTitle() {
	o.OriginalTitle.Unset()
}

// GetCleanOriginalTitle returns the CleanOriginalTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetCleanOriginalTitle() string {
	if o == nil || isNil(o.CleanOriginalTitle.Get()) {
		var ret string
		return ret
	}
	return *o.CleanOriginalTitle.Get()
}

// GetCleanOriginalTitleOk returns a tuple with the CleanOriginalTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetCleanOriginalTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.CleanOriginalTitle.Get(), o.CleanOriginalTitle.IsSet()
}

// HasCleanOriginalTitle returns a boolean if a field has been set.
func (o *MovieMetadata) HasCleanOriginalTitle() bool {
	if o != nil && o.CleanOriginalTitle.IsSet() {
		return true
	}

	return false
}

// SetCleanOriginalTitle gets a reference to the given NullableString and assigns it to the CleanOriginalTitle field.
func (o *MovieMetadata) SetCleanOriginalTitle(v string) {
	o.CleanOriginalTitle.Set(&v)
}
// SetCleanOriginalTitleNil sets the value for CleanOriginalTitle to be an explicit nil
func (o *MovieMetadata) SetCleanOriginalTitleNil() {
	o.CleanOriginalTitle.Set(nil)
}

// UnsetCleanOriginalTitle ensures that no value is present for CleanOriginalTitle, not even an explicit nil
func (o *MovieMetadata) UnsetCleanOriginalTitle() {
	o.CleanOriginalTitle.Unset()
}

// GetOriginalLanguage returns the OriginalLanguage field value if set, zero value otherwise.
func (o *MovieMetadata) GetOriginalLanguage() Language {
	if o == nil || isNil(o.OriginalLanguage) {
		var ret Language
		return ret
	}
	return *o.OriginalLanguage
}

// GetOriginalLanguageOk returns a tuple with the OriginalLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MovieMetadata) GetOriginalLanguageOk() (*Language, bool) {
	if o == nil || isNil(o.OriginalLanguage) {
    return nil, false
	}
	return o.OriginalLanguage, true
}

// HasOriginalLanguage returns a boolean if a field has been set.
func (o *MovieMetadata) HasOriginalLanguage() bool {
	if o != nil && !isNil(o.OriginalLanguage) {
		return true
	}

	return false
}

// SetOriginalLanguage gets a reference to the given Language and assigns it to the OriginalLanguage field.
func (o *MovieMetadata) SetOriginalLanguage(v Language) {
	o.OriginalLanguage = &v
}

// GetRecommendations returns the Recommendations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieMetadata) GetRecommendations() []*int32 {
	if o == nil {
		var ret []*int32
		return ret
	}
	return o.Recommendations
}

// GetRecommendationsOk returns a tuple with the Recommendations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieMetadata) GetRecommendationsOk() ([]*int32, bool) {
	if o == nil || isNil(o.Recommendations) {
    return nil, false
	}
	return o.Recommendations, true
}

// HasRecommendations returns a boolean if a field has been set.
func (o *MovieMetadata) HasRecommendations() bool {
	if o != nil && isNil(o.Recommendations) {
		return true
	}

	return false
}

// SetRecommendations gets a reference to the given []int32 and assigns it to the Recommendations field.
func (o *MovieMetadata) SetRecommendations(v []*int32) {
	o.Recommendations = v
}

// GetPopularity returns the Popularity field value if set, zero value otherwise.
func (o *MovieMetadata) GetPopularity() float32 {
	if o == nil || isNil(o.Popularity) {
		var ret float32
		return ret
	}
	return *o.Popularity
}

// GetPopularityOk returns a tuple with the Popularity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MovieMetadata) GetPopularityOk() (*float32, bool) {
	if o == nil || isNil(o.Popularity) {
    return nil, false
	}
	return o.Popularity, true
}

// HasPopularity returns a boolean if a field has been set.
func (o *MovieMetadata) HasPopularity() bool {
	if o != nil && !isNil(o.Popularity) {
		return true
	}

	return false
}

// SetPopularity gets a reference to the given float32 and assigns it to the Popularity field.
func (o *MovieMetadata) SetPopularity(v float32) {
	o.Popularity = &v
}

// GetIsRecentMovie returns the IsRecentMovie field value if set, zero value otherwise.
func (o *MovieMetadata) GetIsRecentMovie() bool {
	if o == nil || isNil(o.IsRecentMovie) {
		var ret bool
		return ret
	}
	return *o.IsRecentMovie
}

// GetIsRecentMovieOk returns a tuple with the IsRecentMovie field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MovieMetadata) GetIsRecentMovieOk() (*bool, bool) {
	if o == nil || isNil(o.IsRecentMovie) {
    return nil, false
	}
	return o.IsRecentMovie, true
}

// HasIsRecentMovie returns a boolean if a field has been set.
func (o *MovieMetadata) HasIsRecentMovie() bool {
	if o != nil && !isNil(o.IsRecentMovie) {
		return true
	}

	return false
}

// SetIsRecentMovie gets a reference to the given bool and assigns it to the IsRecentMovie field.
func (o *MovieMetadata) SetIsRecentMovie(v bool) {
	o.IsRecentMovie = &v
}

func (o MovieMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.TmdbId) {
		toSerialize["tmdbId"] = o.TmdbId
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	if o.Genres != nil {
		toSerialize["genres"] = o.Genres
	}
	if o.InCinemas.IsSet() {
		toSerialize["inCinemas"] = o.InCinemas.Get()
	}
	if o.PhysicalRelease.IsSet() {
		toSerialize["physicalRelease"] = o.PhysicalRelease.Get()
	}
	if o.DigitalRelease.IsSet() {
		toSerialize["digitalRelease"] = o.DigitalRelease.Get()
	}
	if o.Certification.IsSet() {
		toSerialize["certification"] = o.Certification.Get()
	}
	if !isNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	if !isNil(o.Ratings) {
		toSerialize["ratings"] = o.Ratings
	}
	if !isNil(o.CollectionTmdbId) {
		toSerialize["collectionTmdbId"] = o.CollectionTmdbId
	}
	if o.CollectionTitle.IsSet() {
		toSerialize["collectionTitle"] = o.CollectionTitle.Get()
	}
	if o.LastInfoSync.IsSet() {
		toSerialize["lastInfoSync"] = o.LastInfoSync.Get()
	}
	if !isNil(o.Runtime) {
		toSerialize["runtime"] = o.Runtime
	}
	if o.Website.IsSet() {
		toSerialize["website"] = o.Website.Get()
	}
	if o.ImdbId.IsSet() {
		toSerialize["imdbId"] = o.ImdbId.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.CleanTitle.IsSet() {
		toSerialize["cleanTitle"] = o.CleanTitle.Get()
	}
	if o.SortTitle.IsSet() {
		toSerialize["sortTitle"] = o.SortTitle.Get()
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.Overview.IsSet() {
		toSerialize["overview"] = o.Overview.Get()
	}
	if o.AlternativeTitles != nil {
		toSerialize["alternativeTitles"] = o.AlternativeTitles
	}
	if o.Translations != nil {
		toSerialize["translations"] = o.Translations
	}
	if o.SecondaryYear.IsSet() {
		toSerialize["secondaryYear"] = o.SecondaryYear.Get()
	}
	if o.YouTubeTrailerId.IsSet() {
		toSerialize["youTubeTrailerId"] = o.YouTubeTrailerId.Get()
	}
	if o.Studio.IsSet() {
		toSerialize["studio"] = o.Studio.Get()
	}
	if o.OriginalTitle.IsSet() {
		toSerialize["originalTitle"] = o.OriginalTitle.Get()
	}
	if o.CleanOriginalTitle.IsSet() {
		toSerialize["cleanOriginalTitle"] = o.CleanOriginalTitle.Get()
	}
	if !isNil(o.OriginalLanguage) {
		toSerialize["originalLanguage"] = o.OriginalLanguage
	}
	if o.Recommendations != nil {
		toSerialize["recommendations"] = o.Recommendations
	}
	if !isNil(o.Popularity) {
		toSerialize["popularity"] = o.Popularity
	}
	if !isNil(o.IsRecentMovie) {
		toSerialize["isRecentMovie"] = o.IsRecentMovie
	}
	return json.Marshal(toSerialize)
}

type NullableMovieMetadata struct {
	value *MovieMetadata
	isSet bool
}

func (v NullableMovieMetadata) Get() *MovieMetadata {
	return v.value
}

func (v *NullableMovieMetadata) Set(val *MovieMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableMovieMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableMovieMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMovieMetadata(val *MovieMetadata) *NullableMovieMetadata {
	return &NullableMovieMetadata{value: val, isSet: true}
}

func (v NullableMovieMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMovieMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


