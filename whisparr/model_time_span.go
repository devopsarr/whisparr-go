/*
Whisparr

Whisparr API docs

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package whisparr

import (
	"encoding/json"
)

// TimeSpan struct for TimeSpan
type TimeSpan struct {
	Ticks *int64 `json:"ticks,omitempty"`
	Days *int32 `json:"days,omitempty"`
	Hours *int32 `json:"hours,omitempty"`
	Milliseconds *int32 `json:"milliseconds,omitempty"`
	Minutes *int32 `json:"minutes,omitempty"`
	Seconds *int32 `json:"seconds,omitempty"`
	TotalDays *float64 `json:"totalDays,omitempty"`
	TotalHours *float64 `json:"totalHours,omitempty"`
	TotalMilliseconds *float64 `json:"totalMilliseconds,omitempty"`
	TotalMinutes *float64 `json:"totalMinutes,omitempty"`
	TotalSeconds *float64 `json:"totalSeconds,omitempty"`
}

// NewTimeSpan instantiates a new TimeSpan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeSpan() *TimeSpan {
	this := TimeSpan{}
	return &this
}

// NewTimeSpanWithDefaults instantiates a new TimeSpan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeSpanWithDefaults() *TimeSpan {
	this := TimeSpan{}
	return &this
}

// GetTicks returns the Ticks field value if set, zero value otherwise.
func (o *TimeSpan) GetTicks() int64 {
	if o == nil || isNil(o.Ticks) {
		var ret int64
		return ret
	}
	return *o.Ticks
}

// GetTicksOk returns a tuple with the Ticks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSpan) GetTicksOk() (*int64, bool) {
	if o == nil || isNil(o.Ticks) {
    return nil, false
	}
	return o.Ticks, true
}

// HasTicks returns a boolean if a field has been set.
func (o *TimeSpan) HasTicks() bool {
	if o != nil && !isNil(o.Ticks) {
		return true
	}

	return false
}

// SetTicks gets a reference to the given int64 and assigns it to the Ticks field.
func (o *TimeSpan) SetTicks(v int64) {
	o.Ticks = &v
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *TimeSpan) GetDays() int32 {
	if o == nil || isNil(o.Days) {
		var ret int32
		return ret
	}
	return *o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSpan) GetDaysOk() (*int32, bool) {
	if o == nil || isNil(o.Days) {
    return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *TimeSpan) HasDays() bool {
	if o != nil && !isNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given int32 and assigns it to the Days field.
func (o *TimeSpan) SetDays(v int32) {
	o.Days = &v
}

// GetHours returns the Hours field value if set, zero value otherwise.
func (o *TimeSpan) GetHours() int32 {
	if o == nil || isNil(o.Hours) {
		var ret int32
		return ret
	}
	return *o.Hours
}

// GetHoursOk returns a tuple with the Hours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSpan) GetHoursOk() (*int32, bool) {
	if o == nil || isNil(o.Hours) {
    return nil, false
	}
	return o.Hours, true
}

// HasHours returns a boolean if a field has been set.
func (o *TimeSpan) HasHours() bool {
	if o != nil && !isNil(o.Hours) {
		return true
	}

	return false
}

// SetHours gets a reference to the given int32 and assigns it to the Hours field.
func (o *TimeSpan) SetHours(v int32) {
	o.Hours = &v
}

// GetMilliseconds returns the Milliseconds field value if set, zero value otherwise.
func (o *TimeSpan) GetMilliseconds() int32 {
	if o == nil || isNil(o.Milliseconds) {
		var ret int32
		return ret
	}
	return *o.Milliseconds
}

// GetMillisecondsOk returns a tuple with the Milliseconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSpan) GetMillisecondsOk() (*int32, bool) {
	if o == nil || isNil(o.Milliseconds) {
    return nil, false
	}
	return o.Milliseconds, true
}

// HasMilliseconds returns a boolean if a field has been set.
func (o *TimeSpan) HasMilliseconds() bool {
	if o != nil && !isNil(o.Milliseconds) {
		return true
	}

	return false
}

// SetMilliseconds gets a reference to the given int32 and assigns it to the Milliseconds field.
func (o *TimeSpan) SetMilliseconds(v int32) {
	o.Milliseconds = &v
}

// GetMinutes returns the Minutes field value if set, zero value otherwise.
func (o *TimeSpan) GetMinutes() int32 {
	if o == nil || isNil(o.Minutes) {
		var ret int32
		return ret
	}
	return *o.Minutes
}

// GetMinutesOk returns a tuple with the Minutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSpan) GetMinutesOk() (*int32, bool) {
	if o == nil || isNil(o.Minutes) {
    return nil, false
	}
	return o.Minutes, true
}

// HasMinutes returns a boolean if a field has been set.
func (o *TimeSpan) HasMinutes() bool {
	if o != nil && !isNil(o.Minutes) {
		return true
	}

	return false
}

// SetMinutes gets a reference to the given int32 and assigns it to the Minutes field.
func (o *TimeSpan) SetMinutes(v int32) {
	o.Minutes = &v
}

// GetSeconds returns the Seconds field value if set, zero value otherwise.
func (o *TimeSpan) GetSeconds() int32 {
	if o == nil || isNil(o.Seconds) {
		var ret int32
		return ret
	}
	return *o.Seconds
}

// GetSecondsOk returns a tuple with the Seconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSpan) GetSecondsOk() (*int32, bool) {
	if o == nil || isNil(o.Seconds) {
    return nil, false
	}
	return o.Seconds, true
}

// HasSeconds returns a boolean if a field has been set.
func (o *TimeSpan) HasSeconds() bool {
	if o != nil && !isNil(o.Seconds) {
		return true
	}

	return false
}

// SetSeconds gets a reference to the given int32 and assigns it to the Seconds field.
func (o *TimeSpan) SetSeconds(v int32) {
	o.Seconds = &v
}

// GetTotalDays returns the TotalDays field value if set, zero value otherwise.
func (o *TimeSpan) GetTotalDays() float64 {
	if o == nil || isNil(o.TotalDays) {
		var ret float64
		return ret
	}
	return *o.TotalDays
}

// GetTotalDaysOk returns a tuple with the TotalDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSpan) GetTotalDaysOk() (*float64, bool) {
	if o == nil || isNil(o.TotalDays) {
    return nil, false
	}
	return o.TotalDays, true
}

// HasTotalDays returns a boolean if a field has been set.
func (o *TimeSpan) HasTotalDays() bool {
	if o != nil && !isNil(o.TotalDays) {
		return true
	}

	return false
}

// SetTotalDays gets a reference to the given float64 and assigns it to the TotalDays field.
func (o *TimeSpan) SetTotalDays(v float64) {
	o.TotalDays = &v
}

// GetTotalHours returns the TotalHours field value if set, zero value otherwise.
func (o *TimeSpan) GetTotalHours() float64 {
	if o == nil || isNil(o.TotalHours) {
		var ret float64
		return ret
	}
	return *o.TotalHours
}

// GetTotalHoursOk returns a tuple with the TotalHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSpan) GetTotalHoursOk() (*float64, bool) {
	if o == nil || isNil(o.TotalHours) {
    return nil, false
	}
	return o.TotalHours, true
}

// HasTotalHours returns a boolean if a field has been set.
func (o *TimeSpan) HasTotalHours() bool {
	if o != nil && !isNil(o.TotalHours) {
		return true
	}

	return false
}

// SetTotalHours gets a reference to the given float64 and assigns it to the TotalHours field.
func (o *TimeSpan) SetTotalHours(v float64) {
	o.TotalHours = &v
}

// GetTotalMilliseconds returns the TotalMilliseconds field value if set, zero value otherwise.
func (o *TimeSpan) GetTotalMilliseconds() float64 {
	if o == nil || isNil(o.TotalMilliseconds) {
		var ret float64
		return ret
	}
	return *o.TotalMilliseconds
}

// GetTotalMillisecondsOk returns a tuple with the TotalMilliseconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSpan) GetTotalMillisecondsOk() (*float64, bool) {
	if o == nil || isNil(o.TotalMilliseconds) {
    return nil, false
	}
	return o.TotalMilliseconds, true
}

// HasTotalMilliseconds returns a boolean if a field has been set.
func (o *TimeSpan) HasTotalMilliseconds() bool {
	if o != nil && !isNil(o.TotalMilliseconds) {
		return true
	}

	return false
}

// SetTotalMilliseconds gets a reference to the given float64 and assigns it to the TotalMilliseconds field.
func (o *TimeSpan) SetTotalMilliseconds(v float64) {
	o.TotalMilliseconds = &v
}

// GetTotalMinutes returns the TotalMinutes field value if set, zero value otherwise.
func (o *TimeSpan) GetTotalMinutes() float64 {
	if o == nil || isNil(o.TotalMinutes) {
		var ret float64
		return ret
	}
	return *o.TotalMinutes
}

// GetTotalMinutesOk returns a tuple with the TotalMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSpan) GetTotalMinutesOk() (*float64, bool) {
	if o == nil || isNil(o.TotalMinutes) {
    return nil, false
	}
	return o.TotalMinutes, true
}

// HasTotalMinutes returns a boolean if a field has been set.
func (o *TimeSpan) HasTotalMinutes() bool {
	if o != nil && !isNil(o.TotalMinutes) {
		return true
	}

	return false
}

// SetTotalMinutes gets a reference to the given float64 and assigns it to the TotalMinutes field.
func (o *TimeSpan) SetTotalMinutes(v float64) {
	o.TotalMinutes = &v
}

// GetTotalSeconds returns the TotalSeconds field value if set, zero value otherwise.
func (o *TimeSpan) GetTotalSeconds() float64 {
	if o == nil || isNil(o.TotalSeconds) {
		var ret float64
		return ret
	}
	return *o.TotalSeconds
}

// GetTotalSecondsOk returns a tuple with the TotalSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSpan) GetTotalSecondsOk() (*float64, bool) {
	if o == nil || isNil(o.TotalSeconds) {
    return nil, false
	}
	return o.TotalSeconds, true
}

// HasTotalSeconds returns a boolean if a field has been set.
func (o *TimeSpan) HasTotalSeconds() bool {
	if o != nil && !isNil(o.TotalSeconds) {
		return true
	}

	return false
}

// SetTotalSeconds gets a reference to the given float64 and assigns it to the TotalSeconds field.
func (o *TimeSpan) SetTotalSeconds(v float64) {
	o.TotalSeconds = &v
}

func (o TimeSpan) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Ticks) {
		toSerialize["ticks"] = o.Ticks
	}
	if !isNil(o.Days) {
		toSerialize["days"] = o.Days
	}
	if !isNil(o.Hours) {
		toSerialize["hours"] = o.Hours
	}
	if !isNil(o.Milliseconds) {
		toSerialize["milliseconds"] = o.Milliseconds
	}
	if !isNil(o.Minutes) {
		toSerialize["minutes"] = o.Minutes
	}
	if !isNil(o.Seconds) {
		toSerialize["seconds"] = o.Seconds
	}
	if !isNil(o.TotalDays) {
		toSerialize["totalDays"] = o.TotalDays
	}
	if !isNil(o.TotalHours) {
		toSerialize["totalHours"] = o.TotalHours
	}
	if !isNil(o.TotalMilliseconds) {
		toSerialize["totalMilliseconds"] = o.TotalMilliseconds
	}
	if !isNil(o.TotalMinutes) {
		toSerialize["totalMinutes"] = o.TotalMinutes
	}
	if !isNil(o.TotalSeconds) {
		toSerialize["totalSeconds"] = o.TotalSeconds
	}
	return json.Marshal(toSerialize)
}

type NullableTimeSpan struct {
	value *TimeSpan
	isSet bool
}

func (v NullableTimeSpan) Get() *TimeSpan {
	return v.value
}

func (v *NullableTimeSpan) Set(val *TimeSpan) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeSpan) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeSpan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeSpan(val *TimeSpan) *NullableTimeSpan {
	return &NullableTimeSpan{value: val, isSet: true}
}

func (v NullableTimeSpan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeSpan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


