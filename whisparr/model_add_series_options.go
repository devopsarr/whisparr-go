/*
Whisparr

Whisparr API docs

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package whisparr

import (
	"encoding/json"
)

// AddSeriesOptions struct for AddSeriesOptions
type AddSeriesOptions struct {
	IgnoreEpisodesWithFiles *bool `json:"ignoreEpisodesWithFiles,omitempty"`
	IgnoreEpisodesWithoutFiles *bool `json:"ignoreEpisodesWithoutFiles,omitempty"`
	Monitor *MonitorTypes `json:"monitor,omitempty"`
	SearchForMissingEpisodes *bool `json:"searchForMissingEpisodes,omitempty"`
	SearchForCutoffUnmetEpisodes *bool `json:"searchForCutoffUnmetEpisodes,omitempty"`
}

// NewAddSeriesOptions instantiates a new AddSeriesOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddSeriesOptions() *AddSeriesOptions {
	this := AddSeriesOptions{}
	return &this
}

// NewAddSeriesOptionsWithDefaults instantiates a new AddSeriesOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddSeriesOptionsWithDefaults() *AddSeriesOptions {
	this := AddSeriesOptions{}
	return &this
}

// GetIgnoreEpisodesWithFiles returns the IgnoreEpisodesWithFiles field value if set, zero value otherwise.
func (o *AddSeriesOptions) GetIgnoreEpisodesWithFiles() bool {
	if o == nil || isNil(o.IgnoreEpisodesWithFiles) {
		var ret bool
		return ret
	}
	return *o.IgnoreEpisodesWithFiles
}

// GetIgnoreEpisodesWithFilesOk returns a tuple with the IgnoreEpisodesWithFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSeriesOptions) GetIgnoreEpisodesWithFilesOk() (*bool, bool) {
	if o == nil || isNil(o.IgnoreEpisodesWithFiles) {
    return nil, false
	}
	return o.IgnoreEpisodesWithFiles, true
}

// HasIgnoreEpisodesWithFiles returns a boolean if a field has been set.
func (o *AddSeriesOptions) HasIgnoreEpisodesWithFiles() bool {
	if o != nil && !isNil(o.IgnoreEpisodesWithFiles) {
		return true
	}

	return false
}

// SetIgnoreEpisodesWithFiles gets a reference to the given bool and assigns it to the IgnoreEpisodesWithFiles field.
func (o *AddSeriesOptions) SetIgnoreEpisodesWithFiles(v bool) {
	o.IgnoreEpisodesWithFiles = &v
}

// GetIgnoreEpisodesWithoutFiles returns the IgnoreEpisodesWithoutFiles field value if set, zero value otherwise.
func (o *AddSeriesOptions) GetIgnoreEpisodesWithoutFiles() bool {
	if o == nil || isNil(o.IgnoreEpisodesWithoutFiles) {
		var ret bool
		return ret
	}
	return *o.IgnoreEpisodesWithoutFiles
}

// GetIgnoreEpisodesWithoutFilesOk returns a tuple with the IgnoreEpisodesWithoutFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSeriesOptions) GetIgnoreEpisodesWithoutFilesOk() (*bool, bool) {
	if o == nil || isNil(o.IgnoreEpisodesWithoutFiles) {
    return nil, false
	}
	return o.IgnoreEpisodesWithoutFiles, true
}

// HasIgnoreEpisodesWithoutFiles returns a boolean if a field has been set.
func (o *AddSeriesOptions) HasIgnoreEpisodesWithoutFiles() bool {
	if o != nil && !isNil(o.IgnoreEpisodesWithoutFiles) {
		return true
	}

	return false
}

// SetIgnoreEpisodesWithoutFiles gets a reference to the given bool and assigns it to the IgnoreEpisodesWithoutFiles field.
func (o *AddSeriesOptions) SetIgnoreEpisodesWithoutFiles(v bool) {
	o.IgnoreEpisodesWithoutFiles = &v
}

// GetMonitor returns the Monitor field value if set, zero value otherwise.
func (o *AddSeriesOptions) GetMonitor() MonitorTypes {
	if o == nil || isNil(o.Monitor) {
		var ret MonitorTypes
		return ret
	}
	return *o.Monitor
}

// GetMonitorOk returns a tuple with the Monitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSeriesOptions) GetMonitorOk() (*MonitorTypes, bool) {
	if o == nil || isNil(o.Monitor) {
    return nil, false
	}
	return o.Monitor, true
}

// HasMonitor returns a boolean if a field has been set.
func (o *AddSeriesOptions) HasMonitor() bool {
	if o != nil && !isNil(o.Monitor) {
		return true
	}

	return false
}

// SetMonitor gets a reference to the given MonitorTypes and assigns it to the Monitor field.
func (o *AddSeriesOptions) SetMonitor(v MonitorTypes) {
	o.Monitor = &v
}

// GetSearchForMissingEpisodes returns the SearchForMissingEpisodes field value if set, zero value otherwise.
func (o *AddSeriesOptions) GetSearchForMissingEpisodes() bool {
	if o == nil || isNil(o.SearchForMissingEpisodes) {
		var ret bool
		return ret
	}
	return *o.SearchForMissingEpisodes
}

// GetSearchForMissingEpisodesOk returns a tuple with the SearchForMissingEpisodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSeriesOptions) GetSearchForMissingEpisodesOk() (*bool, bool) {
	if o == nil || isNil(o.SearchForMissingEpisodes) {
    return nil, false
	}
	return o.SearchForMissingEpisodes, true
}

// HasSearchForMissingEpisodes returns a boolean if a field has been set.
func (o *AddSeriesOptions) HasSearchForMissingEpisodes() bool {
	if o != nil && !isNil(o.SearchForMissingEpisodes) {
		return true
	}

	return false
}

// SetSearchForMissingEpisodes gets a reference to the given bool and assigns it to the SearchForMissingEpisodes field.
func (o *AddSeriesOptions) SetSearchForMissingEpisodes(v bool) {
	o.SearchForMissingEpisodes = &v
}

// GetSearchForCutoffUnmetEpisodes returns the SearchForCutoffUnmetEpisodes field value if set, zero value otherwise.
func (o *AddSeriesOptions) GetSearchForCutoffUnmetEpisodes() bool {
	if o == nil || isNil(o.SearchForCutoffUnmetEpisodes) {
		var ret bool
		return ret
	}
	return *o.SearchForCutoffUnmetEpisodes
}

// GetSearchForCutoffUnmetEpisodesOk returns a tuple with the SearchForCutoffUnmetEpisodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSeriesOptions) GetSearchForCutoffUnmetEpisodesOk() (*bool, bool) {
	if o == nil || isNil(o.SearchForCutoffUnmetEpisodes) {
    return nil, false
	}
	return o.SearchForCutoffUnmetEpisodes, true
}

// HasSearchForCutoffUnmetEpisodes returns a boolean if a field has been set.
func (o *AddSeriesOptions) HasSearchForCutoffUnmetEpisodes() bool {
	if o != nil && !isNil(o.SearchForCutoffUnmetEpisodes) {
		return true
	}

	return false
}

// SetSearchForCutoffUnmetEpisodes gets a reference to the given bool and assigns it to the SearchForCutoffUnmetEpisodes field.
func (o *AddSeriesOptions) SetSearchForCutoffUnmetEpisodes(v bool) {
	o.SearchForCutoffUnmetEpisodes = &v
}

func (o AddSeriesOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.IgnoreEpisodesWithFiles) {
		toSerialize["ignoreEpisodesWithFiles"] = o.IgnoreEpisodesWithFiles
	}
	if !isNil(o.IgnoreEpisodesWithoutFiles) {
		toSerialize["ignoreEpisodesWithoutFiles"] = o.IgnoreEpisodesWithoutFiles
	}
	if !isNil(o.Monitor) {
		toSerialize["monitor"] = o.Monitor
	}
	if !isNil(o.SearchForMissingEpisodes) {
		toSerialize["searchForMissingEpisodes"] = o.SearchForMissingEpisodes
	}
	if !isNil(o.SearchForCutoffUnmetEpisodes) {
		toSerialize["searchForCutoffUnmetEpisodes"] = o.SearchForCutoffUnmetEpisodes
	}
	return json.Marshal(toSerialize)
}

type NullableAddSeriesOptions struct {
	value *AddSeriesOptions
	isSet bool
}

func (v NullableAddSeriesOptions) Get() *AddSeriesOptions {
	return v.value
}

func (v *NullableAddSeriesOptions) Set(val *AddSeriesOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableAddSeriesOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableAddSeriesOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddSeriesOptions(val *AddSeriesOptions) *NullableAddSeriesOptions {
	return &NullableAddSeriesOptions{value: val, isSet: true}
}

func (v NullableAddSeriesOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddSeriesOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


