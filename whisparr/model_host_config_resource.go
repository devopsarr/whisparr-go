/*
Radarr

Radarr API docs

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package whisparr

import (
	"encoding/json"
)

// HostConfigResource struct for HostConfigResource
type HostConfigResource struct {
	Id *int32 `json:"id,omitempty"`
	BindAddress NullableString `json:"bindAddress,omitempty"`
	Port *int32 `json:"port,omitempty"`
	SslPort *int32 `json:"sslPort,omitempty"`
	EnableSsl *bool `json:"enableSsl,omitempty"`
	LaunchBrowser *bool `json:"launchBrowser,omitempty"`
	AuthenticationMethod *AuthenticationType `json:"authenticationMethod,omitempty"`
	AuthenticationRequired *AuthenticationRequiredType `json:"authenticationRequired,omitempty"`
	AnalyticsEnabled *bool `json:"analyticsEnabled,omitempty"`
	Username NullableString `json:"username,omitempty"`
	Password NullableString `json:"password,omitempty"`
	PasswordConfirmation NullableString `json:"passwordConfirmation,omitempty"`
	LogLevel NullableString `json:"logLevel,omitempty"`
	ConsoleLogLevel NullableString `json:"consoleLogLevel,omitempty"`
	Branch NullableString `json:"branch,omitempty"`
	ApiKey NullableString `json:"apiKey,omitempty"`
	SslCertPath NullableString `json:"sslCertPath,omitempty"`
	SslCertPassword NullableString `json:"sslCertPassword,omitempty"`
	UrlBase NullableString `json:"urlBase,omitempty"`
	InstanceName NullableString `json:"instanceName,omitempty"`
	ApplicationUrl NullableString `json:"applicationUrl,omitempty"`
	UpdateAutomatically *bool `json:"updateAutomatically,omitempty"`
	UpdateMechanism *UpdateMechanism `json:"updateMechanism,omitempty"`
	UpdateScriptPath NullableString `json:"updateScriptPath,omitempty"`
	ProxyEnabled *bool `json:"proxyEnabled,omitempty"`
	ProxyType *ProxyType `json:"proxyType,omitempty"`
	ProxyHostname NullableString `json:"proxyHostname,omitempty"`
	ProxyPort *int32 `json:"proxyPort,omitempty"`
	ProxyUsername NullableString `json:"proxyUsername,omitempty"`
	ProxyPassword NullableString `json:"proxyPassword,omitempty"`
	ProxyBypassFilter NullableString `json:"proxyBypassFilter,omitempty"`
	ProxyBypassLocalAddresses *bool `json:"proxyBypassLocalAddresses,omitempty"`
	CertificateValidation *CertificateValidationType `json:"certificateValidation,omitempty"`
	BackupFolder NullableString `json:"backupFolder,omitempty"`
	BackupInterval *int32 `json:"backupInterval,omitempty"`
	BackupRetention *int32 `json:"backupRetention,omitempty"`
}

// NewHostConfigResource instantiates a new HostConfigResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostConfigResource() *HostConfigResource {
	this := HostConfigResource{}
	return &this
}

// NewHostConfigResourceWithDefaults instantiates a new HostConfigResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostConfigResourceWithDefaults() *HostConfigResource {
	this := HostConfigResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HostConfigResource) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HostConfigResource) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *HostConfigResource) SetId(v int32) {
	o.Id = &v
}

// GetBindAddress returns the BindAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetBindAddress() string {
	if o == nil || isNil(o.BindAddress.Get()) {
		var ret string
		return ret
	}
	return *o.BindAddress.Get()
}

// GetBindAddressOk returns a tuple with the BindAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetBindAddressOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.BindAddress.Get(), o.BindAddress.IsSet()
}

// HasBindAddress returns a boolean if a field has been set.
func (o *HostConfigResource) HasBindAddress() bool {
	if o != nil && o.BindAddress.IsSet() {
		return true
	}

	return false
}

// SetBindAddress gets a reference to the given NullableString and assigns it to the BindAddress field.
func (o *HostConfigResource) SetBindAddress(v string) {
	o.BindAddress.Set(&v)
}
// SetBindAddressNil sets the value for BindAddress to be an explicit nil
func (o *HostConfigResource) SetBindAddressNil() {
	o.BindAddress.Set(nil)
}

// UnsetBindAddress ensures that no value is present for BindAddress, not even an explicit nil
func (o *HostConfigResource) UnsetBindAddress() {
	o.BindAddress.Unset()
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *HostConfigResource) GetPort() int32 {
	if o == nil || isNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetPortOk() (*int32, bool) {
	if o == nil || isNil(o.Port) {
    return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *HostConfigResource) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *HostConfigResource) SetPort(v int32) {
	o.Port = &v
}

// GetSslPort returns the SslPort field value if set, zero value otherwise.
func (o *HostConfigResource) GetSslPort() int32 {
	if o == nil || isNil(o.SslPort) {
		var ret int32
		return ret
	}
	return *o.SslPort
}

// GetSslPortOk returns a tuple with the SslPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetSslPortOk() (*int32, bool) {
	if o == nil || isNil(o.SslPort) {
    return nil, false
	}
	return o.SslPort, true
}

// HasSslPort returns a boolean if a field has been set.
func (o *HostConfigResource) HasSslPort() bool {
	if o != nil && !isNil(o.SslPort) {
		return true
	}

	return false
}

// SetSslPort gets a reference to the given int32 and assigns it to the SslPort field.
func (o *HostConfigResource) SetSslPort(v int32) {
	o.SslPort = &v
}

// GetEnableSsl returns the EnableSsl field value if set, zero value otherwise.
func (o *HostConfigResource) GetEnableSsl() bool {
	if o == nil || isNil(o.EnableSsl) {
		var ret bool
		return ret
	}
	return *o.EnableSsl
}

// GetEnableSslOk returns a tuple with the EnableSsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetEnableSslOk() (*bool, bool) {
	if o == nil || isNil(o.EnableSsl) {
    return nil, false
	}
	return o.EnableSsl, true
}

// HasEnableSsl returns a boolean if a field has been set.
func (o *HostConfigResource) HasEnableSsl() bool {
	if o != nil && !isNil(o.EnableSsl) {
		return true
	}

	return false
}

// SetEnableSsl gets a reference to the given bool and assigns it to the EnableSsl field.
func (o *HostConfigResource) SetEnableSsl(v bool) {
	o.EnableSsl = &v
}

// GetLaunchBrowser returns the LaunchBrowser field value if set, zero value otherwise.
func (o *HostConfigResource) GetLaunchBrowser() bool {
	if o == nil || isNil(o.LaunchBrowser) {
		var ret bool
		return ret
	}
	return *o.LaunchBrowser
}

// GetLaunchBrowserOk returns a tuple with the LaunchBrowser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetLaunchBrowserOk() (*bool, bool) {
	if o == nil || isNil(o.LaunchBrowser) {
    return nil, false
	}
	return o.LaunchBrowser, true
}

// HasLaunchBrowser returns a boolean if a field has been set.
func (o *HostConfigResource) HasLaunchBrowser() bool {
	if o != nil && !isNil(o.LaunchBrowser) {
		return true
	}

	return false
}

// SetLaunchBrowser gets a reference to the given bool and assigns it to the LaunchBrowser field.
func (o *HostConfigResource) SetLaunchBrowser(v bool) {
	o.LaunchBrowser = &v
}

// GetAuthenticationMethod returns the AuthenticationMethod field value if set, zero value otherwise.
func (o *HostConfigResource) GetAuthenticationMethod() AuthenticationType {
	if o == nil || isNil(o.AuthenticationMethod) {
		var ret AuthenticationType
		return ret
	}
	return *o.AuthenticationMethod
}

// GetAuthenticationMethodOk returns a tuple with the AuthenticationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetAuthenticationMethodOk() (*AuthenticationType, bool) {
	if o == nil || isNil(o.AuthenticationMethod) {
    return nil, false
	}
	return o.AuthenticationMethod, true
}

// HasAuthenticationMethod returns a boolean if a field has been set.
func (o *HostConfigResource) HasAuthenticationMethod() bool {
	if o != nil && !isNil(o.AuthenticationMethod) {
		return true
	}

	return false
}

// SetAuthenticationMethod gets a reference to the given AuthenticationType and assigns it to the AuthenticationMethod field.
func (o *HostConfigResource) SetAuthenticationMethod(v AuthenticationType) {
	o.AuthenticationMethod = &v
}

// GetAuthenticationRequired returns the AuthenticationRequired field value if set, zero value otherwise.
func (o *HostConfigResource) GetAuthenticationRequired() AuthenticationRequiredType {
	if o == nil || isNil(o.AuthenticationRequired) {
		var ret AuthenticationRequiredType
		return ret
	}
	return *o.AuthenticationRequired
}

// GetAuthenticationRequiredOk returns a tuple with the AuthenticationRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetAuthenticationRequiredOk() (*AuthenticationRequiredType, bool) {
	if o == nil || isNil(o.AuthenticationRequired) {
    return nil, false
	}
	return o.AuthenticationRequired, true
}

// HasAuthenticationRequired returns a boolean if a field has been set.
func (o *HostConfigResource) HasAuthenticationRequired() bool {
	if o != nil && !isNil(o.AuthenticationRequired) {
		return true
	}

	return false
}

// SetAuthenticationRequired gets a reference to the given AuthenticationRequiredType and assigns it to the AuthenticationRequired field.
func (o *HostConfigResource) SetAuthenticationRequired(v AuthenticationRequiredType) {
	o.AuthenticationRequired = &v
}

// GetAnalyticsEnabled returns the AnalyticsEnabled field value if set, zero value otherwise.
func (o *HostConfigResource) GetAnalyticsEnabled() bool {
	if o == nil || isNil(o.AnalyticsEnabled) {
		var ret bool
		return ret
	}
	return *o.AnalyticsEnabled
}

// GetAnalyticsEnabledOk returns a tuple with the AnalyticsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetAnalyticsEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.AnalyticsEnabled) {
    return nil, false
	}
	return o.AnalyticsEnabled, true
}

// HasAnalyticsEnabled returns a boolean if a field has been set.
func (o *HostConfigResource) HasAnalyticsEnabled() bool {
	if o != nil && !isNil(o.AnalyticsEnabled) {
		return true
	}

	return false
}

// SetAnalyticsEnabled gets a reference to the given bool and assigns it to the AnalyticsEnabled field.
func (o *HostConfigResource) SetAnalyticsEnabled(v bool) {
	o.AnalyticsEnabled = &v
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetUsername() string {
	if o == nil || isNil(o.Username.Get()) {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetUsernameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *HostConfigResource) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *HostConfigResource) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *HostConfigResource) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *HostConfigResource) UnsetUsername() {
	o.Username.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetPassword() string {
	if o == nil || isNil(o.Password.Get()) {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetPasswordOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *HostConfigResource) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *HostConfigResource) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *HostConfigResource) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *HostConfigResource) UnsetPassword() {
	o.Password.Unset()
}

// GetPasswordConfirmation returns the PasswordConfirmation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetPasswordConfirmation() string {
	if o == nil || isNil(o.PasswordConfirmation.Get()) {
		var ret string
		return ret
	}
	return *o.PasswordConfirmation.Get()
}

// GetPasswordConfirmationOk returns a tuple with the PasswordConfirmation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetPasswordConfirmationOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.PasswordConfirmation.Get(), o.PasswordConfirmation.IsSet()
}

// HasPasswordConfirmation returns a boolean if a field has been set.
func (o *HostConfigResource) HasPasswordConfirmation() bool {
	if o != nil && o.PasswordConfirmation.IsSet() {
		return true
	}

	return false
}

// SetPasswordConfirmation gets a reference to the given NullableString and assigns it to the PasswordConfirmation field.
func (o *HostConfigResource) SetPasswordConfirmation(v string) {
	o.PasswordConfirmation.Set(&v)
}
// SetPasswordConfirmationNil sets the value for PasswordConfirmation to be an explicit nil
func (o *HostConfigResource) SetPasswordConfirmationNil() {
	o.PasswordConfirmation.Set(nil)
}

// UnsetPasswordConfirmation ensures that no value is present for PasswordConfirmation, not even an explicit nil
func (o *HostConfigResource) UnsetPasswordConfirmation() {
	o.PasswordConfirmation.Unset()
}

// GetLogLevel returns the LogLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetLogLevel() string {
	if o == nil || isNil(o.LogLevel.Get()) {
		var ret string
		return ret
	}
	return *o.LogLevel.Get()
}

// GetLogLevelOk returns a tuple with the LogLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetLogLevelOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.LogLevel.Get(), o.LogLevel.IsSet()
}

// HasLogLevel returns a boolean if a field has been set.
func (o *HostConfigResource) HasLogLevel() bool {
	if o != nil && o.LogLevel.IsSet() {
		return true
	}

	return false
}

// SetLogLevel gets a reference to the given NullableString and assigns it to the LogLevel field.
func (o *HostConfigResource) SetLogLevel(v string) {
	o.LogLevel.Set(&v)
}
// SetLogLevelNil sets the value for LogLevel to be an explicit nil
func (o *HostConfigResource) SetLogLevelNil() {
	o.LogLevel.Set(nil)
}

// UnsetLogLevel ensures that no value is present for LogLevel, not even an explicit nil
func (o *HostConfigResource) UnsetLogLevel() {
	o.LogLevel.Unset()
}

// GetConsoleLogLevel returns the ConsoleLogLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetConsoleLogLevel() string {
	if o == nil || isNil(o.ConsoleLogLevel.Get()) {
		var ret string
		return ret
	}
	return *o.ConsoleLogLevel.Get()
}

// GetConsoleLogLevelOk returns a tuple with the ConsoleLogLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetConsoleLogLevelOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ConsoleLogLevel.Get(), o.ConsoleLogLevel.IsSet()
}

// HasConsoleLogLevel returns a boolean if a field has been set.
func (o *HostConfigResource) HasConsoleLogLevel() bool {
	if o != nil && o.ConsoleLogLevel.IsSet() {
		return true
	}

	return false
}

// SetConsoleLogLevel gets a reference to the given NullableString and assigns it to the ConsoleLogLevel field.
func (o *HostConfigResource) SetConsoleLogLevel(v string) {
	o.ConsoleLogLevel.Set(&v)
}
// SetConsoleLogLevelNil sets the value for ConsoleLogLevel to be an explicit nil
func (o *HostConfigResource) SetConsoleLogLevelNil() {
	o.ConsoleLogLevel.Set(nil)
}

// UnsetConsoleLogLevel ensures that no value is present for ConsoleLogLevel, not even an explicit nil
func (o *HostConfigResource) UnsetConsoleLogLevel() {
	o.ConsoleLogLevel.Unset()
}

// GetBranch returns the Branch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetBranch() string {
	if o == nil || isNil(o.Branch.Get()) {
		var ret string
		return ret
	}
	return *o.Branch.Get()
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetBranchOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Branch.Get(), o.Branch.IsSet()
}

// HasBranch returns a boolean if a field has been set.
func (o *HostConfigResource) HasBranch() bool {
	if o != nil && o.Branch.IsSet() {
		return true
	}

	return false
}

// SetBranch gets a reference to the given NullableString and assigns it to the Branch field.
func (o *HostConfigResource) SetBranch(v string) {
	o.Branch.Set(&v)
}
// SetBranchNil sets the value for Branch to be an explicit nil
func (o *HostConfigResource) SetBranchNil() {
	o.Branch.Set(nil)
}

// UnsetBranch ensures that no value is present for Branch, not even an explicit nil
func (o *HostConfigResource) UnsetBranch() {
	o.Branch.Unset()
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetApiKey() string {
	if o == nil || isNil(o.ApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.ApiKey.Get()
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetApiKeyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ApiKey.Get(), o.ApiKey.IsSet()
}

// HasApiKey returns a boolean if a field has been set.
func (o *HostConfigResource) HasApiKey() bool {
	if o != nil && o.ApiKey.IsSet() {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given NullableString and assigns it to the ApiKey field.
func (o *HostConfigResource) SetApiKey(v string) {
	o.ApiKey.Set(&v)
}
// SetApiKeyNil sets the value for ApiKey to be an explicit nil
func (o *HostConfigResource) SetApiKeyNil() {
	o.ApiKey.Set(nil)
}

// UnsetApiKey ensures that no value is present for ApiKey, not even an explicit nil
func (o *HostConfigResource) UnsetApiKey() {
	o.ApiKey.Unset()
}

// GetSslCertPath returns the SslCertPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetSslCertPath() string {
	if o == nil || isNil(o.SslCertPath.Get()) {
		var ret string
		return ret
	}
	return *o.SslCertPath.Get()
}

// GetSslCertPathOk returns a tuple with the SslCertPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetSslCertPathOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.SslCertPath.Get(), o.SslCertPath.IsSet()
}

// HasSslCertPath returns a boolean if a field has been set.
func (o *HostConfigResource) HasSslCertPath() bool {
	if o != nil && o.SslCertPath.IsSet() {
		return true
	}

	return false
}

// SetSslCertPath gets a reference to the given NullableString and assigns it to the SslCertPath field.
func (o *HostConfigResource) SetSslCertPath(v string) {
	o.SslCertPath.Set(&v)
}
// SetSslCertPathNil sets the value for SslCertPath to be an explicit nil
func (o *HostConfigResource) SetSslCertPathNil() {
	o.SslCertPath.Set(nil)
}

// UnsetSslCertPath ensures that no value is present for SslCertPath, not even an explicit nil
func (o *HostConfigResource) UnsetSslCertPath() {
	o.SslCertPath.Unset()
}

// GetSslCertPassword returns the SslCertPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetSslCertPassword() string {
	if o == nil || isNil(o.SslCertPassword.Get()) {
		var ret string
		return ret
	}
	return *o.SslCertPassword.Get()
}

// GetSslCertPasswordOk returns a tuple with the SslCertPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetSslCertPasswordOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.SslCertPassword.Get(), o.SslCertPassword.IsSet()
}

// HasSslCertPassword returns a boolean if a field has been set.
func (o *HostConfigResource) HasSslCertPassword() bool {
	if o != nil && o.SslCertPassword.IsSet() {
		return true
	}

	return false
}

// SetSslCertPassword gets a reference to the given NullableString and assigns it to the SslCertPassword field.
func (o *HostConfigResource) SetSslCertPassword(v string) {
	o.SslCertPassword.Set(&v)
}
// SetSslCertPasswordNil sets the value for SslCertPassword to be an explicit nil
func (o *HostConfigResource) SetSslCertPasswordNil() {
	o.SslCertPassword.Set(nil)
}

// UnsetSslCertPassword ensures that no value is present for SslCertPassword, not even an explicit nil
func (o *HostConfigResource) UnsetSslCertPassword() {
	o.SslCertPassword.Unset()
}

// GetUrlBase returns the UrlBase field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetUrlBase() string {
	if o == nil || isNil(o.UrlBase.Get()) {
		var ret string
		return ret
	}
	return *o.UrlBase.Get()
}

// GetUrlBaseOk returns a tuple with the UrlBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetUrlBaseOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.UrlBase.Get(), o.UrlBase.IsSet()
}

// HasUrlBase returns a boolean if a field has been set.
func (o *HostConfigResource) HasUrlBase() bool {
	if o != nil && o.UrlBase.IsSet() {
		return true
	}

	return false
}

// SetUrlBase gets a reference to the given NullableString and assigns it to the UrlBase field.
func (o *HostConfigResource) SetUrlBase(v string) {
	o.UrlBase.Set(&v)
}
// SetUrlBaseNil sets the value for UrlBase to be an explicit nil
func (o *HostConfigResource) SetUrlBaseNil() {
	o.UrlBase.Set(nil)
}

// UnsetUrlBase ensures that no value is present for UrlBase, not even an explicit nil
func (o *HostConfigResource) UnsetUrlBase() {
	o.UrlBase.Unset()
}

// GetInstanceName returns the InstanceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetInstanceName() string {
	if o == nil || isNil(o.InstanceName.Get()) {
		var ret string
		return ret
	}
	return *o.InstanceName.Get()
}

// GetInstanceNameOk returns a tuple with the InstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetInstanceNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.InstanceName.Get(), o.InstanceName.IsSet()
}

// HasInstanceName returns a boolean if a field has been set.
func (o *HostConfigResource) HasInstanceName() bool {
	if o != nil && o.InstanceName.IsSet() {
		return true
	}

	return false
}

// SetInstanceName gets a reference to the given NullableString and assigns it to the InstanceName field.
func (o *HostConfigResource) SetInstanceName(v string) {
	o.InstanceName.Set(&v)
}
// SetInstanceNameNil sets the value for InstanceName to be an explicit nil
func (o *HostConfigResource) SetInstanceNameNil() {
	o.InstanceName.Set(nil)
}

// UnsetInstanceName ensures that no value is present for InstanceName, not even an explicit nil
func (o *HostConfigResource) UnsetInstanceName() {
	o.InstanceName.Unset()
}

// GetApplicationUrl returns the ApplicationUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetApplicationUrl() string {
	if o == nil || isNil(o.ApplicationUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ApplicationUrl.Get()
}

// GetApplicationUrlOk returns a tuple with the ApplicationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetApplicationUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ApplicationUrl.Get(), o.ApplicationUrl.IsSet()
}

// HasApplicationUrl returns a boolean if a field has been set.
func (o *HostConfigResource) HasApplicationUrl() bool {
	if o != nil && o.ApplicationUrl.IsSet() {
		return true
	}

	return false
}

// SetApplicationUrl gets a reference to the given NullableString and assigns it to the ApplicationUrl field.
func (o *HostConfigResource) SetApplicationUrl(v string) {
	o.ApplicationUrl.Set(&v)
}
// SetApplicationUrlNil sets the value for ApplicationUrl to be an explicit nil
func (o *HostConfigResource) SetApplicationUrlNil() {
	o.ApplicationUrl.Set(nil)
}

// UnsetApplicationUrl ensures that no value is present for ApplicationUrl, not even an explicit nil
func (o *HostConfigResource) UnsetApplicationUrl() {
	o.ApplicationUrl.Unset()
}

// GetUpdateAutomatically returns the UpdateAutomatically field value if set, zero value otherwise.
func (o *HostConfigResource) GetUpdateAutomatically() bool {
	if o == nil || isNil(o.UpdateAutomatically) {
		var ret bool
		return ret
	}
	return *o.UpdateAutomatically
}

// GetUpdateAutomaticallyOk returns a tuple with the UpdateAutomatically field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetUpdateAutomaticallyOk() (*bool, bool) {
	if o == nil || isNil(o.UpdateAutomatically) {
    return nil, false
	}
	return o.UpdateAutomatically, true
}

// HasUpdateAutomatically returns a boolean if a field has been set.
func (o *HostConfigResource) HasUpdateAutomatically() bool {
	if o != nil && !isNil(o.UpdateAutomatically) {
		return true
	}

	return false
}

// SetUpdateAutomatically gets a reference to the given bool and assigns it to the UpdateAutomatically field.
func (o *HostConfigResource) SetUpdateAutomatically(v bool) {
	o.UpdateAutomatically = &v
}

// GetUpdateMechanism returns the UpdateMechanism field value if set, zero value otherwise.
func (o *HostConfigResource) GetUpdateMechanism() UpdateMechanism {
	if o == nil || isNil(o.UpdateMechanism) {
		var ret UpdateMechanism
		return ret
	}
	return *o.UpdateMechanism
}

// GetUpdateMechanismOk returns a tuple with the UpdateMechanism field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetUpdateMechanismOk() (*UpdateMechanism, bool) {
	if o == nil || isNil(o.UpdateMechanism) {
    return nil, false
	}
	return o.UpdateMechanism, true
}

// HasUpdateMechanism returns a boolean if a field has been set.
func (o *HostConfigResource) HasUpdateMechanism() bool {
	if o != nil && !isNil(o.UpdateMechanism) {
		return true
	}

	return false
}

// SetUpdateMechanism gets a reference to the given UpdateMechanism and assigns it to the UpdateMechanism field.
func (o *HostConfigResource) SetUpdateMechanism(v UpdateMechanism) {
	o.UpdateMechanism = &v
}

// GetUpdateScriptPath returns the UpdateScriptPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetUpdateScriptPath() string {
	if o == nil || isNil(o.UpdateScriptPath.Get()) {
		var ret string
		return ret
	}
	return *o.UpdateScriptPath.Get()
}

// GetUpdateScriptPathOk returns a tuple with the UpdateScriptPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetUpdateScriptPathOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.UpdateScriptPath.Get(), o.UpdateScriptPath.IsSet()
}

// HasUpdateScriptPath returns a boolean if a field has been set.
func (o *HostConfigResource) HasUpdateScriptPath() bool {
	if o != nil && o.UpdateScriptPath.IsSet() {
		return true
	}

	return false
}

// SetUpdateScriptPath gets a reference to the given NullableString and assigns it to the UpdateScriptPath field.
func (o *HostConfigResource) SetUpdateScriptPath(v string) {
	o.UpdateScriptPath.Set(&v)
}
// SetUpdateScriptPathNil sets the value for UpdateScriptPath to be an explicit nil
func (o *HostConfigResource) SetUpdateScriptPathNil() {
	o.UpdateScriptPath.Set(nil)
}

// UnsetUpdateScriptPath ensures that no value is present for UpdateScriptPath, not even an explicit nil
func (o *HostConfigResource) UnsetUpdateScriptPath() {
	o.UpdateScriptPath.Unset()
}

// GetProxyEnabled returns the ProxyEnabled field value if set, zero value otherwise.
func (o *HostConfigResource) GetProxyEnabled() bool {
	if o == nil || isNil(o.ProxyEnabled) {
		var ret bool
		return ret
	}
	return *o.ProxyEnabled
}

// GetProxyEnabledOk returns a tuple with the ProxyEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetProxyEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.ProxyEnabled) {
    return nil, false
	}
	return o.ProxyEnabled, true
}

// HasProxyEnabled returns a boolean if a field has been set.
func (o *HostConfigResource) HasProxyEnabled() bool {
	if o != nil && !isNil(o.ProxyEnabled) {
		return true
	}

	return false
}

// SetProxyEnabled gets a reference to the given bool and assigns it to the ProxyEnabled field.
func (o *HostConfigResource) SetProxyEnabled(v bool) {
	o.ProxyEnabled = &v
}

// GetProxyType returns the ProxyType field value if set, zero value otherwise.
func (o *HostConfigResource) GetProxyType() ProxyType {
	if o == nil || isNil(o.ProxyType) {
		var ret ProxyType
		return ret
	}
	return *o.ProxyType
}

// GetProxyTypeOk returns a tuple with the ProxyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetProxyTypeOk() (*ProxyType, bool) {
	if o == nil || isNil(o.ProxyType) {
    return nil, false
	}
	return o.ProxyType, true
}

// HasProxyType returns a boolean if a field has been set.
func (o *HostConfigResource) HasProxyType() bool {
	if o != nil && !isNil(o.ProxyType) {
		return true
	}

	return false
}

// SetProxyType gets a reference to the given ProxyType and assigns it to the ProxyType field.
func (o *HostConfigResource) SetProxyType(v ProxyType) {
	o.ProxyType = &v
}

// GetProxyHostname returns the ProxyHostname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetProxyHostname() string {
	if o == nil || isNil(o.ProxyHostname.Get()) {
		var ret string
		return ret
	}
	return *o.ProxyHostname.Get()
}

// GetProxyHostnameOk returns a tuple with the ProxyHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetProxyHostnameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ProxyHostname.Get(), o.ProxyHostname.IsSet()
}

// HasProxyHostname returns a boolean if a field has been set.
func (o *HostConfigResource) HasProxyHostname() bool {
	if o != nil && o.ProxyHostname.IsSet() {
		return true
	}

	return false
}

// SetProxyHostname gets a reference to the given NullableString and assigns it to the ProxyHostname field.
func (o *HostConfigResource) SetProxyHostname(v string) {
	o.ProxyHostname.Set(&v)
}
// SetProxyHostnameNil sets the value for ProxyHostname to be an explicit nil
func (o *HostConfigResource) SetProxyHostnameNil() {
	o.ProxyHostname.Set(nil)
}

// UnsetProxyHostname ensures that no value is present for ProxyHostname, not even an explicit nil
func (o *HostConfigResource) UnsetProxyHostname() {
	o.ProxyHostname.Unset()
}

// GetProxyPort returns the ProxyPort field value if set, zero value otherwise.
func (o *HostConfigResource) GetProxyPort() int32 {
	if o == nil || isNil(o.ProxyPort) {
		var ret int32
		return ret
	}
	return *o.ProxyPort
}

// GetProxyPortOk returns a tuple with the ProxyPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetProxyPortOk() (*int32, bool) {
	if o == nil || isNil(o.ProxyPort) {
    return nil, false
	}
	return o.ProxyPort, true
}

// HasProxyPort returns a boolean if a field has been set.
func (o *HostConfigResource) HasProxyPort() bool {
	if o != nil && !isNil(o.ProxyPort) {
		return true
	}

	return false
}

// SetProxyPort gets a reference to the given int32 and assigns it to the ProxyPort field.
func (o *HostConfigResource) SetProxyPort(v int32) {
	o.ProxyPort = &v
}

// GetProxyUsername returns the ProxyUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetProxyUsername() string {
	if o == nil || isNil(o.ProxyUsername.Get()) {
		var ret string
		return ret
	}
	return *o.ProxyUsername.Get()
}

// GetProxyUsernameOk returns a tuple with the ProxyUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetProxyUsernameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ProxyUsername.Get(), o.ProxyUsername.IsSet()
}

// HasProxyUsername returns a boolean if a field has been set.
func (o *HostConfigResource) HasProxyUsername() bool {
	if o != nil && o.ProxyUsername.IsSet() {
		return true
	}

	return false
}

// SetProxyUsername gets a reference to the given NullableString and assigns it to the ProxyUsername field.
func (o *HostConfigResource) SetProxyUsername(v string) {
	o.ProxyUsername.Set(&v)
}
// SetProxyUsernameNil sets the value for ProxyUsername to be an explicit nil
func (o *HostConfigResource) SetProxyUsernameNil() {
	o.ProxyUsername.Set(nil)
}

// UnsetProxyUsername ensures that no value is present for ProxyUsername, not even an explicit nil
func (o *HostConfigResource) UnsetProxyUsername() {
	o.ProxyUsername.Unset()
}

// GetProxyPassword returns the ProxyPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetProxyPassword() string {
	if o == nil || isNil(o.ProxyPassword.Get()) {
		var ret string
		return ret
	}
	return *o.ProxyPassword.Get()
}

// GetProxyPasswordOk returns a tuple with the ProxyPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetProxyPasswordOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ProxyPassword.Get(), o.ProxyPassword.IsSet()
}

// HasProxyPassword returns a boolean if a field has been set.
func (o *HostConfigResource) HasProxyPassword() bool {
	if o != nil && o.ProxyPassword.IsSet() {
		return true
	}

	return false
}

// SetProxyPassword gets a reference to the given NullableString and assigns it to the ProxyPassword field.
func (o *HostConfigResource) SetProxyPassword(v string) {
	o.ProxyPassword.Set(&v)
}
// SetProxyPasswordNil sets the value for ProxyPassword to be an explicit nil
func (o *HostConfigResource) SetProxyPasswordNil() {
	o.ProxyPassword.Set(nil)
}

// UnsetProxyPassword ensures that no value is present for ProxyPassword, not even an explicit nil
func (o *HostConfigResource) UnsetProxyPassword() {
	o.ProxyPassword.Unset()
}

// GetProxyBypassFilter returns the ProxyBypassFilter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetProxyBypassFilter() string {
	if o == nil || isNil(o.ProxyBypassFilter.Get()) {
		var ret string
		return ret
	}
	return *o.ProxyBypassFilter.Get()
}

// GetProxyBypassFilterOk returns a tuple with the ProxyBypassFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetProxyBypassFilterOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ProxyBypassFilter.Get(), o.ProxyBypassFilter.IsSet()
}

// HasProxyBypassFilter returns a boolean if a field has been set.
func (o *HostConfigResource) HasProxyBypassFilter() bool {
	if o != nil && o.ProxyBypassFilter.IsSet() {
		return true
	}

	return false
}

// SetProxyBypassFilter gets a reference to the given NullableString and assigns it to the ProxyBypassFilter field.
func (o *HostConfigResource) SetProxyBypassFilter(v string) {
	o.ProxyBypassFilter.Set(&v)
}
// SetProxyBypassFilterNil sets the value for ProxyBypassFilter to be an explicit nil
func (o *HostConfigResource) SetProxyBypassFilterNil() {
	o.ProxyBypassFilter.Set(nil)
}

// UnsetProxyBypassFilter ensures that no value is present for ProxyBypassFilter, not even an explicit nil
func (o *HostConfigResource) UnsetProxyBypassFilter() {
	o.ProxyBypassFilter.Unset()
}

// GetProxyBypassLocalAddresses returns the ProxyBypassLocalAddresses field value if set, zero value otherwise.
func (o *HostConfigResource) GetProxyBypassLocalAddresses() bool {
	if o == nil || isNil(o.ProxyBypassLocalAddresses) {
		var ret bool
		return ret
	}
	return *o.ProxyBypassLocalAddresses
}

// GetProxyBypassLocalAddressesOk returns a tuple with the ProxyBypassLocalAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetProxyBypassLocalAddressesOk() (*bool, bool) {
	if o == nil || isNil(o.ProxyBypassLocalAddresses) {
    return nil, false
	}
	return o.ProxyBypassLocalAddresses, true
}

// HasProxyBypassLocalAddresses returns a boolean if a field has been set.
func (o *HostConfigResource) HasProxyBypassLocalAddresses() bool {
	if o != nil && !isNil(o.ProxyBypassLocalAddresses) {
		return true
	}

	return false
}

// SetProxyBypassLocalAddresses gets a reference to the given bool and assigns it to the ProxyBypassLocalAddresses field.
func (o *HostConfigResource) SetProxyBypassLocalAddresses(v bool) {
	o.ProxyBypassLocalAddresses = &v
}

// GetCertificateValidation returns the CertificateValidation field value if set, zero value otherwise.
func (o *HostConfigResource) GetCertificateValidation() CertificateValidationType {
	if o == nil || isNil(o.CertificateValidation) {
		var ret CertificateValidationType
		return ret
	}
	return *o.CertificateValidation
}

// GetCertificateValidationOk returns a tuple with the CertificateValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetCertificateValidationOk() (*CertificateValidationType, bool) {
	if o == nil || isNil(o.CertificateValidation) {
    return nil, false
	}
	return o.CertificateValidation, true
}

// HasCertificateValidation returns a boolean if a field has been set.
func (o *HostConfigResource) HasCertificateValidation() bool {
	if o != nil && !isNil(o.CertificateValidation) {
		return true
	}

	return false
}

// SetCertificateValidation gets a reference to the given CertificateValidationType and assigns it to the CertificateValidation field.
func (o *HostConfigResource) SetCertificateValidation(v CertificateValidationType) {
	o.CertificateValidation = &v
}

// GetBackupFolder returns the BackupFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostConfigResource) GetBackupFolder() string {
	if o == nil || isNil(o.BackupFolder.Get()) {
		var ret string
		return ret
	}
	return *o.BackupFolder.Get()
}

// GetBackupFolderOk returns a tuple with the BackupFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostConfigResource) GetBackupFolderOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.BackupFolder.Get(), o.BackupFolder.IsSet()
}

// HasBackupFolder returns a boolean if a field has been set.
func (o *HostConfigResource) HasBackupFolder() bool {
	if o != nil && o.BackupFolder.IsSet() {
		return true
	}

	return false
}

// SetBackupFolder gets a reference to the given NullableString and assigns it to the BackupFolder field.
func (o *HostConfigResource) SetBackupFolder(v string) {
	o.BackupFolder.Set(&v)
}
// SetBackupFolderNil sets the value for BackupFolder to be an explicit nil
func (o *HostConfigResource) SetBackupFolderNil() {
	o.BackupFolder.Set(nil)
}

// UnsetBackupFolder ensures that no value is present for BackupFolder, not even an explicit nil
func (o *HostConfigResource) UnsetBackupFolder() {
	o.BackupFolder.Unset()
}

// GetBackupInterval returns the BackupInterval field value if set, zero value otherwise.
func (o *HostConfigResource) GetBackupInterval() int32 {
	if o == nil || isNil(o.BackupInterval) {
		var ret int32
		return ret
	}
	return *o.BackupInterval
}

// GetBackupIntervalOk returns a tuple with the BackupInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetBackupIntervalOk() (*int32, bool) {
	if o == nil || isNil(o.BackupInterval) {
    return nil, false
	}
	return o.BackupInterval, true
}

// HasBackupInterval returns a boolean if a field has been set.
func (o *HostConfigResource) HasBackupInterval() bool {
	if o != nil && !isNil(o.BackupInterval) {
		return true
	}

	return false
}

// SetBackupInterval gets a reference to the given int32 and assigns it to the BackupInterval field.
func (o *HostConfigResource) SetBackupInterval(v int32) {
	o.BackupInterval = &v
}

// GetBackupRetention returns the BackupRetention field value if set, zero value otherwise.
func (o *HostConfigResource) GetBackupRetention() int32 {
	if o == nil || isNil(o.BackupRetention) {
		var ret int32
		return ret
	}
	return *o.BackupRetention
}

// GetBackupRetentionOk returns a tuple with the BackupRetention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostConfigResource) GetBackupRetentionOk() (*int32, bool) {
	if o == nil || isNil(o.BackupRetention) {
    return nil, false
	}
	return o.BackupRetention, true
}

// HasBackupRetention returns a boolean if a field has been set.
func (o *HostConfigResource) HasBackupRetention() bool {
	if o != nil && !isNil(o.BackupRetention) {
		return true
	}

	return false
}

// SetBackupRetention gets a reference to the given int32 and assigns it to the BackupRetention field.
func (o *HostConfigResource) SetBackupRetention(v int32) {
	o.BackupRetention = &v
}

func (o HostConfigResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.BindAddress.IsSet() {
		toSerialize["bindAddress"] = o.BindAddress.Get()
	}
	if !isNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !isNil(o.SslPort) {
		toSerialize["sslPort"] = o.SslPort
	}
	if !isNil(o.EnableSsl) {
		toSerialize["enableSsl"] = o.EnableSsl
	}
	if !isNil(o.LaunchBrowser) {
		toSerialize["launchBrowser"] = o.LaunchBrowser
	}
	if !isNil(o.AuthenticationMethod) {
		toSerialize["authenticationMethod"] = o.AuthenticationMethod
	}
	if !isNil(o.AuthenticationRequired) {
		toSerialize["authenticationRequired"] = o.AuthenticationRequired
	}
	if !isNil(o.AnalyticsEnabled) {
		toSerialize["analyticsEnabled"] = o.AnalyticsEnabled
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.PasswordConfirmation.IsSet() {
		toSerialize["passwordConfirmation"] = o.PasswordConfirmation.Get()
	}
	if o.LogLevel.IsSet() {
		toSerialize["logLevel"] = o.LogLevel.Get()
	}
	if o.ConsoleLogLevel.IsSet() {
		toSerialize["consoleLogLevel"] = o.ConsoleLogLevel.Get()
	}
	if o.Branch.IsSet() {
		toSerialize["branch"] = o.Branch.Get()
	}
	if o.ApiKey.IsSet() {
		toSerialize["apiKey"] = o.ApiKey.Get()
	}
	if o.SslCertPath.IsSet() {
		toSerialize["sslCertPath"] = o.SslCertPath.Get()
	}
	if o.SslCertPassword.IsSet() {
		toSerialize["sslCertPassword"] = o.SslCertPassword.Get()
	}
	if o.UrlBase.IsSet() {
		toSerialize["urlBase"] = o.UrlBase.Get()
	}
	if o.InstanceName.IsSet() {
		toSerialize["instanceName"] = o.InstanceName.Get()
	}
	if o.ApplicationUrl.IsSet() {
		toSerialize["applicationUrl"] = o.ApplicationUrl.Get()
	}
	if !isNil(o.UpdateAutomatically) {
		toSerialize["updateAutomatically"] = o.UpdateAutomatically
	}
	if !isNil(o.UpdateMechanism) {
		toSerialize["updateMechanism"] = o.UpdateMechanism
	}
	if o.UpdateScriptPath.IsSet() {
		toSerialize["updateScriptPath"] = o.UpdateScriptPath.Get()
	}
	if !isNil(o.ProxyEnabled) {
		toSerialize["proxyEnabled"] = o.ProxyEnabled
	}
	if !isNil(o.ProxyType) {
		toSerialize["proxyType"] = o.ProxyType
	}
	if o.ProxyHostname.IsSet() {
		toSerialize["proxyHostname"] = o.ProxyHostname.Get()
	}
	if !isNil(o.ProxyPort) {
		toSerialize["proxyPort"] = o.ProxyPort
	}
	if o.ProxyUsername.IsSet() {
		toSerialize["proxyUsername"] = o.ProxyUsername.Get()
	}
	if o.ProxyPassword.IsSet() {
		toSerialize["proxyPassword"] = o.ProxyPassword.Get()
	}
	if o.ProxyBypassFilter.IsSet() {
		toSerialize["proxyBypassFilter"] = o.ProxyBypassFilter.Get()
	}
	if !isNil(o.ProxyBypassLocalAddresses) {
		toSerialize["proxyBypassLocalAddresses"] = o.ProxyBypassLocalAddresses
	}
	if !isNil(o.CertificateValidation) {
		toSerialize["certificateValidation"] = o.CertificateValidation
	}
	if o.BackupFolder.IsSet() {
		toSerialize["backupFolder"] = o.BackupFolder.Get()
	}
	if !isNil(o.BackupInterval) {
		toSerialize["backupInterval"] = o.BackupInterval
	}
	if !isNil(o.BackupRetention) {
		toSerialize["backupRetention"] = o.BackupRetention
	}
	return json.Marshal(toSerialize)
}

type NullableHostConfigResource struct {
	value *HostConfigResource
	isSet bool
}

func (v NullableHostConfigResource) Get() *HostConfigResource {
	return v.value
}

func (v *NullableHostConfigResource) Set(val *HostConfigResource) {
	v.value = val
	v.isSet = true
}

func (v NullableHostConfigResource) IsSet() bool {
	return v.isSet
}

func (v *NullableHostConfigResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostConfigResource(val *HostConfigResource) *NullableHostConfigResource {
	return &NullableHostConfigResource{value: val, isSet: true}
}

func (v NullableHostConfigResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostConfigResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


