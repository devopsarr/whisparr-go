/*
Whisparr

Whisparr API docs

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package whisparr

import (
	"encoding/json"
	"time"
)

// SeriesResource struct for SeriesResource
type SeriesResource struct {
	Id *int32 `json:"id,omitempty"`
	Title NullableString `json:"title,omitempty"`
	AlternateTitles []*AlternateTitleResource `json:"alternateTitles,omitempty"`
	SortTitle NullableString `json:"sortTitle,omitempty"`
	Status *SeriesStatusType `json:"status,omitempty"`
	Ended *bool `json:"ended,omitempty"`
	ProfileName NullableString `json:"profileName,omitempty"`
	Overview NullableString `json:"overview,omitempty"`
	NextAiring NullableTime `json:"nextAiring,omitempty"`
	PreviousAiring NullableTime `json:"previousAiring,omitempty"`
	Network NullableString `json:"network,omitempty"`
	AirTime NullableString `json:"airTime,omitempty"`
	Images []*MediaCover `json:"images,omitempty"`
	OriginalLanguage *Language `json:"originalLanguage,omitempty"`
	RemotePoster NullableString `json:"remotePoster,omitempty"`
	Seasons []*SeasonResource `json:"seasons,omitempty"`
	Year *int32 `json:"year,omitempty"`
	Path NullableString `json:"path,omitempty"`
	QualityProfileId *int32 `json:"qualityProfileId,omitempty"`
	SeasonFolder *bool `json:"seasonFolder,omitempty"`
	Monitored *bool `json:"monitored,omitempty"`
	UseSceneNumbering *bool `json:"useSceneNumbering,omitempty"`
	Runtime *int32 `json:"runtime,omitempty"`
	TvdbId *int32 `json:"tvdbId,omitempty"`
	TvRageId *int32 `json:"tvRageId,omitempty"`
	TvMazeId *int32 `json:"tvMazeId,omitempty"`
	FirstAired NullableTime `json:"firstAired,omitempty"`
	SeriesType *SeriesTypes `json:"seriesType,omitempty"`
	CleanTitle NullableString `json:"cleanTitle,omitempty"`
	ImdbId NullableString `json:"imdbId,omitempty"`
	TitleSlug NullableString `json:"titleSlug,omitempty"`
	RootFolderPath NullableString `json:"rootFolderPath,omitempty"`
	Folder NullableString `json:"folder,omitempty"`
	Certification NullableString `json:"certification,omitempty"`
	Genres []*string `json:"genres,omitempty"`
	Tags []*int32 `json:"tags,omitempty"`
	Added *time.Time `json:"added,omitempty"`
	AddOptions *AddSeriesOptions `json:"addOptions,omitempty"`
	Ratings *Ratings `json:"ratings,omitempty"`
	Statistics *SeriesStatisticsResource `json:"statistics,omitempty"`
	EpisodesChanged NullableBool `json:"episodesChanged,omitempty"`
	// Deprecated
	LanguageProfileId *int32 `json:"languageProfileId,omitempty"`
}

// NewSeriesResource instantiates a new SeriesResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeriesResource() *SeriesResource {
	this := SeriesResource{}
	return &this
}

// NewSeriesResourceWithDefaults instantiates a new SeriesResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeriesResourceWithDefaults() *SeriesResource {
	this := SeriesResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SeriesResource) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SeriesResource) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SeriesResource) SetId(v int32) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetTitle() string {
	if o == nil || isNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *SeriesResource) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *SeriesResource) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *SeriesResource) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *SeriesResource) UnsetTitle() {
	o.Title.Unset()
}

// GetAlternateTitles returns the AlternateTitles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetAlternateTitles() []*AlternateTitleResource {
	if o == nil {
		var ret []*AlternateTitleResource
		return ret
	}
	return o.AlternateTitles
}

// GetAlternateTitlesOk returns a tuple with the AlternateTitles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetAlternateTitlesOk() ([]*AlternateTitleResource, bool) {
	if o == nil || isNil(o.AlternateTitles) {
    return nil, false
	}
	return o.AlternateTitles, true
}

// HasAlternateTitles returns a boolean if a field has been set.
func (o *SeriesResource) HasAlternateTitles() bool {
	if o != nil && isNil(o.AlternateTitles) {
		return true
	}

	return false
}

// SetAlternateTitles gets a reference to the given []AlternateTitleResource and assigns it to the AlternateTitles field.
func (o *SeriesResource) SetAlternateTitles(v []*AlternateTitleResource) {
	o.AlternateTitles = v
}

// GetSortTitle returns the SortTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetSortTitle() string {
	if o == nil || isNil(o.SortTitle.Get()) {
		var ret string
		return ret
	}
	return *o.SortTitle.Get()
}

// GetSortTitleOk returns a tuple with the SortTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetSortTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.SortTitle.Get(), o.SortTitle.IsSet()
}

// HasSortTitle returns a boolean if a field has been set.
func (o *SeriesResource) HasSortTitle() bool {
	if o != nil && o.SortTitle.IsSet() {
		return true
	}

	return false
}

// SetSortTitle gets a reference to the given NullableString and assigns it to the SortTitle field.
func (o *SeriesResource) SetSortTitle(v string) {
	o.SortTitle.Set(&v)
}
// SetSortTitleNil sets the value for SortTitle to be an explicit nil
func (o *SeriesResource) SetSortTitleNil() {
	o.SortTitle.Set(nil)
}

// UnsetSortTitle ensures that no value is present for SortTitle, not even an explicit nil
func (o *SeriesResource) UnsetSortTitle() {
	o.SortTitle.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SeriesResource) GetStatus() SeriesStatusType {
	if o == nil || isNil(o.Status) {
		var ret SeriesStatusType
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetStatusOk() (*SeriesStatusType, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SeriesResource) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given SeriesStatusType and assigns it to the Status field.
func (o *SeriesResource) SetStatus(v SeriesStatusType) {
	o.Status = &v
}

// GetEnded returns the Ended field value if set, zero value otherwise.
func (o *SeriesResource) GetEnded() bool {
	if o == nil || isNil(o.Ended) {
		var ret bool
		return ret
	}
	return *o.Ended
}

// GetEndedOk returns a tuple with the Ended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetEndedOk() (*bool, bool) {
	if o == nil || isNil(o.Ended) {
    return nil, false
	}
	return o.Ended, true
}

// HasEnded returns a boolean if a field has been set.
func (o *SeriesResource) HasEnded() bool {
	if o != nil && !isNil(o.Ended) {
		return true
	}

	return false
}

// SetEnded gets a reference to the given bool and assigns it to the Ended field.
func (o *SeriesResource) SetEnded(v bool) {
	o.Ended = &v
}

// GetProfileName returns the ProfileName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetProfileName() string {
	if o == nil || isNil(o.ProfileName.Get()) {
		var ret string
		return ret
	}
	return *o.ProfileName.Get()
}

// GetProfileNameOk returns a tuple with the ProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetProfileNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ProfileName.Get(), o.ProfileName.IsSet()
}

// HasProfileName returns a boolean if a field has been set.
func (o *SeriesResource) HasProfileName() bool {
	if o != nil && o.ProfileName.IsSet() {
		return true
	}

	return false
}

// SetProfileName gets a reference to the given NullableString and assigns it to the ProfileName field.
func (o *SeriesResource) SetProfileName(v string) {
	o.ProfileName.Set(&v)
}
// SetProfileNameNil sets the value for ProfileName to be an explicit nil
func (o *SeriesResource) SetProfileNameNil() {
	o.ProfileName.Set(nil)
}

// UnsetProfileName ensures that no value is present for ProfileName, not even an explicit nil
func (o *SeriesResource) UnsetProfileName() {
	o.ProfileName.Unset()
}

// GetOverview returns the Overview field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetOverview() string {
	if o == nil || isNil(o.Overview.Get()) {
		var ret string
		return ret
	}
	return *o.Overview.Get()
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetOverviewOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Overview.Get(), o.Overview.IsSet()
}

// HasOverview returns a boolean if a field has been set.
func (o *SeriesResource) HasOverview() bool {
	if o != nil && o.Overview.IsSet() {
		return true
	}

	return false
}

// SetOverview gets a reference to the given NullableString and assigns it to the Overview field.
func (o *SeriesResource) SetOverview(v string) {
	o.Overview.Set(&v)
}
// SetOverviewNil sets the value for Overview to be an explicit nil
func (o *SeriesResource) SetOverviewNil() {
	o.Overview.Set(nil)
}

// UnsetOverview ensures that no value is present for Overview, not even an explicit nil
func (o *SeriesResource) UnsetOverview() {
	o.Overview.Unset()
}

// GetNextAiring returns the NextAiring field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetNextAiring() time.Time {
	if o == nil || isNil(o.NextAiring.Get()) {
		var ret time.Time
		return ret
	}
	return *o.NextAiring.Get()
}

// GetNextAiringOk returns a tuple with the NextAiring field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetNextAiringOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.NextAiring.Get(), o.NextAiring.IsSet()
}

// HasNextAiring returns a boolean if a field has been set.
func (o *SeriesResource) HasNextAiring() bool {
	if o != nil && o.NextAiring.IsSet() {
		return true
	}

	return false
}

// SetNextAiring gets a reference to the given NullableTime and assigns it to the NextAiring field.
func (o *SeriesResource) SetNextAiring(v time.Time) {
	o.NextAiring.Set(&v)
}
// SetNextAiringNil sets the value for NextAiring to be an explicit nil
func (o *SeriesResource) SetNextAiringNil() {
	o.NextAiring.Set(nil)
}

// UnsetNextAiring ensures that no value is present for NextAiring, not even an explicit nil
func (o *SeriesResource) UnsetNextAiring() {
	o.NextAiring.Unset()
}

// GetPreviousAiring returns the PreviousAiring field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetPreviousAiring() time.Time {
	if o == nil || isNil(o.PreviousAiring.Get()) {
		var ret time.Time
		return ret
	}
	return *o.PreviousAiring.Get()
}

// GetPreviousAiringOk returns a tuple with the PreviousAiring field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetPreviousAiringOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.PreviousAiring.Get(), o.PreviousAiring.IsSet()
}

// HasPreviousAiring returns a boolean if a field has been set.
func (o *SeriesResource) HasPreviousAiring() bool {
	if o != nil && o.PreviousAiring.IsSet() {
		return true
	}

	return false
}

// SetPreviousAiring gets a reference to the given NullableTime and assigns it to the PreviousAiring field.
func (o *SeriesResource) SetPreviousAiring(v time.Time) {
	o.PreviousAiring.Set(&v)
}
// SetPreviousAiringNil sets the value for PreviousAiring to be an explicit nil
func (o *SeriesResource) SetPreviousAiringNil() {
	o.PreviousAiring.Set(nil)
}

// UnsetPreviousAiring ensures that no value is present for PreviousAiring, not even an explicit nil
func (o *SeriesResource) UnsetPreviousAiring() {
	o.PreviousAiring.Unset()
}

// GetNetwork returns the Network field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetNetwork() string {
	if o == nil || isNil(o.Network.Get()) {
		var ret string
		return ret
	}
	return *o.Network.Get()
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetNetworkOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Network.Get(), o.Network.IsSet()
}

// HasNetwork returns a boolean if a field has been set.
func (o *SeriesResource) HasNetwork() bool {
	if o != nil && o.Network.IsSet() {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given NullableString and assigns it to the Network field.
func (o *SeriesResource) SetNetwork(v string) {
	o.Network.Set(&v)
}
// SetNetworkNil sets the value for Network to be an explicit nil
func (o *SeriesResource) SetNetworkNil() {
	o.Network.Set(nil)
}

// UnsetNetwork ensures that no value is present for Network, not even an explicit nil
func (o *SeriesResource) UnsetNetwork() {
	o.Network.Unset()
}

// GetAirTime returns the AirTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetAirTime() string {
	if o == nil || isNil(o.AirTime.Get()) {
		var ret string
		return ret
	}
	return *o.AirTime.Get()
}

// GetAirTimeOk returns a tuple with the AirTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetAirTimeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.AirTime.Get(), o.AirTime.IsSet()
}

// HasAirTime returns a boolean if a field has been set.
func (o *SeriesResource) HasAirTime() bool {
	if o != nil && o.AirTime.IsSet() {
		return true
	}

	return false
}

// SetAirTime gets a reference to the given NullableString and assigns it to the AirTime field.
func (o *SeriesResource) SetAirTime(v string) {
	o.AirTime.Set(&v)
}
// SetAirTimeNil sets the value for AirTime to be an explicit nil
func (o *SeriesResource) SetAirTimeNil() {
	o.AirTime.Set(nil)
}

// UnsetAirTime ensures that no value is present for AirTime, not even an explicit nil
func (o *SeriesResource) UnsetAirTime() {
	o.AirTime.Unset()
}

// GetImages returns the Images field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetImages() []*MediaCover {
	if o == nil {
		var ret []*MediaCover
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetImagesOk() ([]*MediaCover, bool) {
	if o == nil || isNil(o.Images) {
    return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *SeriesResource) HasImages() bool {
	if o != nil && isNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []MediaCover and assigns it to the Images field.
func (o *SeriesResource) SetImages(v []*MediaCover) {
	o.Images = v
}

// GetOriginalLanguage returns the OriginalLanguage field value if set, zero value otherwise.
func (o *SeriesResource) GetOriginalLanguage() Language {
	if o == nil || isNil(o.OriginalLanguage) {
		var ret Language
		return ret
	}
	return *o.OriginalLanguage
}

// GetOriginalLanguageOk returns a tuple with the OriginalLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetOriginalLanguageOk() (*Language, bool) {
	if o == nil || isNil(o.OriginalLanguage) {
    return nil, false
	}
	return o.OriginalLanguage, true
}

// HasOriginalLanguage returns a boolean if a field has been set.
func (o *SeriesResource) HasOriginalLanguage() bool {
	if o != nil && !isNil(o.OriginalLanguage) {
		return true
	}

	return false
}

// SetOriginalLanguage gets a reference to the given Language and assigns it to the OriginalLanguage field.
func (o *SeriesResource) SetOriginalLanguage(v Language) {
	o.OriginalLanguage = &v
}

// GetRemotePoster returns the RemotePoster field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetRemotePoster() string {
	if o == nil || isNil(o.RemotePoster.Get()) {
		var ret string
		return ret
	}
	return *o.RemotePoster.Get()
}

// GetRemotePosterOk returns a tuple with the RemotePoster field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetRemotePosterOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.RemotePoster.Get(), o.RemotePoster.IsSet()
}

// HasRemotePoster returns a boolean if a field has been set.
func (o *SeriesResource) HasRemotePoster() bool {
	if o != nil && o.RemotePoster.IsSet() {
		return true
	}

	return false
}

// SetRemotePoster gets a reference to the given NullableString and assigns it to the RemotePoster field.
func (o *SeriesResource) SetRemotePoster(v string) {
	o.RemotePoster.Set(&v)
}
// SetRemotePosterNil sets the value for RemotePoster to be an explicit nil
func (o *SeriesResource) SetRemotePosterNil() {
	o.RemotePoster.Set(nil)
}

// UnsetRemotePoster ensures that no value is present for RemotePoster, not even an explicit nil
func (o *SeriesResource) UnsetRemotePoster() {
	o.RemotePoster.Unset()
}

// GetSeasons returns the Seasons field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetSeasons() []*SeasonResource {
	if o == nil {
		var ret []*SeasonResource
		return ret
	}
	return o.Seasons
}

// GetSeasonsOk returns a tuple with the Seasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetSeasonsOk() ([]*SeasonResource, bool) {
	if o == nil || isNil(o.Seasons) {
    return nil, false
	}
	return o.Seasons, true
}

// HasSeasons returns a boolean if a field has been set.
func (o *SeriesResource) HasSeasons() bool {
	if o != nil && isNil(o.Seasons) {
		return true
	}

	return false
}

// SetSeasons gets a reference to the given []SeasonResource and assigns it to the Seasons field.
func (o *SeriesResource) SetSeasons(v []*SeasonResource) {
	o.Seasons = v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *SeriesResource) GetYear() int32 {
	if o == nil || isNil(o.Year) {
		var ret int32
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetYearOk() (*int32, bool) {
	if o == nil || isNil(o.Year) {
    return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *SeriesResource) HasYear() bool {
	if o != nil && !isNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given int32 and assigns it to the Year field.
func (o *SeriesResource) SetYear(v int32) {
	o.Year = &v
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetPath() string {
	if o == nil || isNil(o.Path.Get()) {
		var ret string
		return ret
	}
	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetPathOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// HasPath returns a boolean if a field has been set.
func (o *SeriesResource) HasPath() bool {
	if o != nil && o.Path.IsSet() {
		return true
	}

	return false
}

// SetPath gets a reference to the given NullableString and assigns it to the Path field.
func (o *SeriesResource) SetPath(v string) {
	o.Path.Set(&v)
}
// SetPathNil sets the value for Path to be an explicit nil
func (o *SeriesResource) SetPathNil() {
	o.Path.Set(nil)
}

// UnsetPath ensures that no value is present for Path, not even an explicit nil
func (o *SeriesResource) UnsetPath() {
	o.Path.Unset()
}

// GetQualityProfileId returns the QualityProfileId field value if set, zero value otherwise.
func (o *SeriesResource) GetQualityProfileId() int32 {
	if o == nil || isNil(o.QualityProfileId) {
		var ret int32
		return ret
	}
	return *o.QualityProfileId
}

// GetQualityProfileIdOk returns a tuple with the QualityProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetQualityProfileIdOk() (*int32, bool) {
	if o == nil || isNil(o.QualityProfileId) {
    return nil, false
	}
	return o.QualityProfileId, true
}

// HasQualityProfileId returns a boolean if a field has been set.
func (o *SeriesResource) HasQualityProfileId() bool {
	if o != nil && !isNil(o.QualityProfileId) {
		return true
	}

	return false
}

// SetQualityProfileId gets a reference to the given int32 and assigns it to the QualityProfileId field.
func (o *SeriesResource) SetQualityProfileId(v int32) {
	o.QualityProfileId = &v
}

// GetSeasonFolder returns the SeasonFolder field value if set, zero value otherwise.
func (o *SeriesResource) GetSeasonFolder() bool {
	if o == nil || isNil(o.SeasonFolder) {
		var ret bool
		return ret
	}
	return *o.SeasonFolder
}

// GetSeasonFolderOk returns a tuple with the SeasonFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetSeasonFolderOk() (*bool, bool) {
	if o == nil || isNil(o.SeasonFolder) {
    return nil, false
	}
	return o.SeasonFolder, true
}

// HasSeasonFolder returns a boolean if a field has been set.
func (o *SeriesResource) HasSeasonFolder() bool {
	if o != nil && !isNil(o.SeasonFolder) {
		return true
	}

	return false
}

// SetSeasonFolder gets a reference to the given bool and assigns it to the SeasonFolder field.
func (o *SeriesResource) SetSeasonFolder(v bool) {
	o.SeasonFolder = &v
}

// GetMonitored returns the Monitored field value if set, zero value otherwise.
func (o *SeriesResource) GetMonitored() bool {
	if o == nil || isNil(o.Monitored) {
		var ret bool
		return ret
	}
	return *o.Monitored
}

// GetMonitoredOk returns a tuple with the Monitored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetMonitoredOk() (*bool, bool) {
	if o == nil || isNil(o.Monitored) {
    return nil, false
	}
	return o.Monitored, true
}

// HasMonitored returns a boolean if a field has been set.
func (o *SeriesResource) HasMonitored() bool {
	if o != nil && !isNil(o.Monitored) {
		return true
	}

	return false
}

// SetMonitored gets a reference to the given bool and assigns it to the Monitored field.
func (o *SeriesResource) SetMonitored(v bool) {
	o.Monitored = &v
}

// GetUseSceneNumbering returns the UseSceneNumbering field value if set, zero value otherwise.
func (o *SeriesResource) GetUseSceneNumbering() bool {
	if o == nil || isNil(o.UseSceneNumbering) {
		var ret bool
		return ret
	}
	return *o.UseSceneNumbering
}

// GetUseSceneNumberingOk returns a tuple with the UseSceneNumbering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetUseSceneNumberingOk() (*bool, bool) {
	if o == nil || isNil(o.UseSceneNumbering) {
    return nil, false
	}
	return o.UseSceneNumbering, true
}

// HasUseSceneNumbering returns a boolean if a field has been set.
func (o *SeriesResource) HasUseSceneNumbering() bool {
	if o != nil && !isNil(o.UseSceneNumbering) {
		return true
	}

	return false
}

// SetUseSceneNumbering gets a reference to the given bool and assigns it to the UseSceneNumbering field.
func (o *SeriesResource) SetUseSceneNumbering(v bool) {
	o.UseSceneNumbering = &v
}

// GetRuntime returns the Runtime field value if set, zero value otherwise.
func (o *SeriesResource) GetRuntime() int32 {
	if o == nil || isNil(o.Runtime) {
		var ret int32
		return ret
	}
	return *o.Runtime
}

// GetRuntimeOk returns a tuple with the Runtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetRuntimeOk() (*int32, bool) {
	if o == nil || isNil(o.Runtime) {
    return nil, false
	}
	return o.Runtime, true
}

// HasRuntime returns a boolean if a field has been set.
func (o *SeriesResource) HasRuntime() bool {
	if o != nil && !isNil(o.Runtime) {
		return true
	}

	return false
}

// SetRuntime gets a reference to the given int32 and assigns it to the Runtime field.
func (o *SeriesResource) SetRuntime(v int32) {
	o.Runtime = &v
}

// GetTvdbId returns the TvdbId field value if set, zero value otherwise.
func (o *SeriesResource) GetTvdbId() int32 {
	if o == nil || isNil(o.TvdbId) {
		var ret int32
		return ret
	}
	return *o.TvdbId
}

// GetTvdbIdOk returns a tuple with the TvdbId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetTvdbIdOk() (*int32, bool) {
	if o == nil || isNil(o.TvdbId) {
    return nil, false
	}
	return o.TvdbId, true
}

// HasTvdbId returns a boolean if a field has been set.
func (o *SeriesResource) HasTvdbId() bool {
	if o != nil && !isNil(o.TvdbId) {
		return true
	}

	return false
}

// SetTvdbId gets a reference to the given int32 and assigns it to the TvdbId field.
func (o *SeriesResource) SetTvdbId(v int32) {
	o.TvdbId = &v
}

// GetTvRageId returns the TvRageId field value if set, zero value otherwise.
func (o *SeriesResource) GetTvRageId() int32 {
	if o == nil || isNil(o.TvRageId) {
		var ret int32
		return ret
	}
	return *o.TvRageId
}

// GetTvRageIdOk returns a tuple with the TvRageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetTvRageIdOk() (*int32, bool) {
	if o == nil || isNil(o.TvRageId) {
    return nil, false
	}
	return o.TvRageId, true
}

// HasTvRageId returns a boolean if a field has been set.
func (o *SeriesResource) HasTvRageId() bool {
	if o != nil && !isNil(o.TvRageId) {
		return true
	}

	return false
}

// SetTvRageId gets a reference to the given int32 and assigns it to the TvRageId field.
func (o *SeriesResource) SetTvRageId(v int32) {
	o.TvRageId = &v
}

// GetTvMazeId returns the TvMazeId field value if set, zero value otherwise.
func (o *SeriesResource) GetTvMazeId() int32 {
	if o == nil || isNil(o.TvMazeId) {
		var ret int32
		return ret
	}
	return *o.TvMazeId
}

// GetTvMazeIdOk returns a tuple with the TvMazeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetTvMazeIdOk() (*int32, bool) {
	if o == nil || isNil(o.TvMazeId) {
    return nil, false
	}
	return o.TvMazeId, true
}

// HasTvMazeId returns a boolean if a field has been set.
func (o *SeriesResource) HasTvMazeId() bool {
	if o != nil && !isNil(o.TvMazeId) {
		return true
	}

	return false
}

// SetTvMazeId gets a reference to the given int32 and assigns it to the TvMazeId field.
func (o *SeriesResource) SetTvMazeId(v int32) {
	o.TvMazeId = &v
}

// GetFirstAired returns the FirstAired field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetFirstAired() time.Time {
	if o == nil || isNil(o.FirstAired.Get()) {
		var ret time.Time
		return ret
	}
	return *o.FirstAired.Get()
}

// GetFirstAiredOk returns a tuple with the FirstAired field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetFirstAiredOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.FirstAired.Get(), o.FirstAired.IsSet()
}

// HasFirstAired returns a boolean if a field has been set.
func (o *SeriesResource) HasFirstAired() bool {
	if o != nil && o.FirstAired.IsSet() {
		return true
	}

	return false
}

// SetFirstAired gets a reference to the given NullableTime and assigns it to the FirstAired field.
func (o *SeriesResource) SetFirstAired(v time.Time) {
	o.FirstAired.Set(&v)
}
// SetFirstAiredNil sets the value for FirstAired to be an explicit nil
func (o *SeriesResource) SetFirstAiredNil() {
	o.FirstAired.Set(nil)
}

// UnsetFirstAired ensures that no value is present for FirstAired, not even an explicit nil
func (o *SeriesResource) UnsetFirstAired() {
	o.FirstAired.Unset()
}

// GetSeriesType returns the SeriesType field value if set, zero value otherwise.
func (o *SeriesResource) GetSeriesType() SeriesTypes {
	if o == nil || isNil(o.SeriesType) {
		var ret SeriesTypes
		return ret
	}
	return *o.SeriesType
}

// GetSeriesTypeOk returns a tuple with the SeriesType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetSeriesTypeOk() (*SeriesTypes, bool) {
	if o == nil || isNil(o.SeriesType) {
    return nil, false
	}
	return o.SeriesType, true
}

// HasSeriesType returns a boolean if a field has been set.
func (o *SeriesResource) HasSeriesType() bool {
	if o != nil && !isNil(o.SeriesType) {
		return true
	}

	return false
}

// SetSeriesType gets a reference to the given SeriesTypes and assigns it to the SeriesType field.
func (o *SeriesResource) SetSeriesType(v SeriesTypes) {
	o.SeriesType = &v
}

// GetCleanTitle returns the CleanTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetCleanTitle() string {
	if o == nil || isNil(o.CleanTitle.Get()) {
		var ret string
		return ret
	}
	return *o.CleanTitle.Get()
}

// GetCleanTitleOk returns a tuple with the CleanTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetCleanTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.CleanTitle.Get(), o.CleanTitle.IsSet()
}

// HasCleanTitle returns a boolean if a field has been set.
func (o *SeriesResource) HasCleanTitle() bool {
	if o != nil && o.CleanTitle.IsSet() {
		return true
	}

	return false
}

// SetCleanTitle gets a reference to the given NullableString and assigns it to the CleanTitle field.
func (o *SeriesResource) SetCleanTitle(v string) {
	o.CleanTitle.Set(&v)
}
// SetCleanTitleNil sets the value for CleanTitle to be an explicit nil
func (o *SeriesResource) SetCleanTitleNil() {
	o.CleanTitle.Set(nil)
}

// UnsetCleanTitle ensures that no value is present for CleanTitle, not even an explicit nil
func (o *SeriesResource) UnsetCleanTitle() {
	o.CleanTitle.Unset()
}

// GetImdbId returns the ImdbId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetImdbId() string {
	if o == nil || isNil(o.ImdbId.Get()) {
		var ret string
		return ret
	}
	return *o.ImdbId.Get()
}

// GetImdbIdOk returns a tuple with the ImdbId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetImdbIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ImdbId.Get(), o.ImdbId.IsSet()
}

// HasImdbId returns a boolean if a field has been set.
func (o *SeriesResource) HasImdbId() bool {
	if o != nil && o.ImdbId.IsSet() {
		return true
	}

	return false
}

// SetImdbId gets a reference to the given NullableString and assigns it to the ImdbId field.
func (o *SeriesResource) SetImdbId(v string) {
	o.ImdbId.Set(&v)
}
// SetImdbIdNil sets the value for ImdbId to be an explicit nil
func (o *SeriesResource) SetImdbIdNil() {
	o.ImdbId.Set(nil)
}

// UnsetImdbId ensures that no value is present for ImdbId, not even an explicit nil
func (o *SeriesResource) UnsetImdbId() {
	o.ImdbId.Unset()
}

// GetTitleSlug returns the TitleSlug field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetTitleSlug() string {
	if o == nil || isNil(o.TitleSlug.Get()) {
		var ret string
		return ret
	}
	return *o.TitleSlug.Get()
}

// GetTitleSlugOk returns a tuple with the TitleSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetTitleSlugOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.TitleSlug.Get(), o.TitleSlug.IsSet()
}

// HasTitleSlug returns a boolean if a field has been set.
func (o *SeriesResource) HasTitleSlug() bool {
	if o != nil && o.TitleSlug.IsSet() {
		return true
	}

	return false
}

// SetTitleSlug gets a reference to the given NullableString and assigns it to the TitleSlug field.
func (o *SeriesResource) SetTitleSlug(v string) {
	o.TitleSlug.Set(&v)
}
// SetTitleSlugNil sets the value for TitleSlug to be an explicit nil
func (o *SeriesResource) SetTitleSlugNil() {
	o.TitleSlug.Set(nil)
}

// UnsetTitleSlug ensures that no value is present for TitleSlug, not even an explicit nil
func (o *SeriesResource) UnsetTitleSlug() {
	o.TitleSlug.Unset()
}

// GetRootFolderPath returns the RootFolderPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetRootFolderPath() string {
	if o == nil || isNil(o.RootFolderPath.Get()) {
		var ret string
		return ret
	}
	return *o.RootFolderPath.Get()
}

// GetRootFolderPathOk returns a tuple with the RootFolderPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetRootFolderPathOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.RootFolderPath.Get(), o.RootFolderPath.IsSet()
}

// HasRootFolderPath returns a boolean if a field has been set.
func (o *SeriesResource) HasRootFolderPath() bool {
	if o != nil && o.RootFolderPath.IsSet() {
		return true
	}

	return false
}

// SetRootFolderPath gets a reference to the given NullableString and assigns it to the RootFolderPath field.
func (o *SeriesResource) SetRootFolderPath(v string) {
	o.RootFolderPath.Set(&v)
}
// SetRootFolderPathNil sets the value for RootFolderPath to be an explicit nil
func (o *SeriesResource) SetRootFolderPathNil() {
	o.RootFolderPath.Set(nil)
}

// UnsetRootFolderPath ensures that no value is present for RootFolderPath, not even an explicit nil
func (o *SeriesResource) UnsetRootFolderPath() {
	o.RootFolderPath.Unset()
}

// GetFolder returns the Folder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetFolder() string {
	if o == nil || isNil(o.Folder.Get()) {
		var ret string
		return ret
	}
	return *o.Folder.Get()
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetFolderOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Folder.Get(), o.Folder.IsSet()
}

// HasFolder returns a boolean if a field has been set.
func (o *SeriesResource) HasFolder() bool {
	if o != nil && o.Folder.IsSet() {
		return true
	}

	return false
}

// SetFolder gets a reference to the given NullableString and assigns it to the Folder field.
func (o *SeriesResource) SetFolder(v string) {
	o.Folder.Set(&v)
}
// SetFolderNil sets the value for Folder to be an explicit nil
func (o *SeriesResource) SetFolderNil() {
	o.Folder.Set(nil)
}

// UnsetFolder ensures that no value is present for Folder, not even an explicit nil
func (o *SeriesResource) UnsetFolder() {
	o.Folder.Unset()
}

// GetCertification returns the Certification field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetCertification() string {
	if o == nil || isNil(o.Certification.Get()) {
		var ret string
		return ret
	}
	return *o.Certification.Get()
}

// GetCertificationOk returns a tuple with the Certification field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetCertificationOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Certification.Get(), o.Certification.IsSet()
}

// HasCertification returns a boolean if a field has been set.
func (o *SeriesResource) HasCertification() bool {
	if o != nil && o.Certification.IsSet() {
		return true
	}

	return false
}

// SetCertification gets a reference to the given NullableString and assigns it to the Certification field.
func (o *SeriesResource) SetCertification(v string) {
	o.Certification.Set(&v)
}
// SetCertificationNil sets the value for Certification to be an explicit nil
func (o *SeriesResource) SetCertificationNil() {
	o.Certification.Set(nil)
}

// UnsetCertification ensures that no value is present for Certification, not even an explicit nil
func (o *SeriesResource) UnsetCertification() {
	o.Certification.Unset()
}

// GetGenres returns the Genres field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetGenres() []*string {
	if o == nil {
		var ret []*string
		return ret
	}
	return o.Genres
}

// GetGenresOk returns a tuple with the Genres field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetGenresOk() ([]*string, bool) {
	if o == nil || isNil(o.Genres) {
    return nil, false
	}
	return o.Genres, true
}

// HasGenres returns a boolean if a field has been set.
func (o *SeriesResource) HasGenres() bool {
	if o != nil && isNil(o.Genres) {
		return true
	}

	return false
}

// SetGenres gets a reference to the given []string and assigns it to the Genres field.
func (o *SeriesResource) SetGenres(v []*string) {
	o.Genres = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetTags() []*int32 {
	if o == nil {
		var ret []*int32
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetTagsOk() ([]*int32, bool) {
	if o == nil || isNil(o.Tags) {
    return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SeriesResource) HasTags() bool {
	if o != nil && isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []int32 and assigns it to the Tags field.
func (o *SeriesResource) SetTags(v []*int32) {
	o.Tags = v
}

// GetAdded returns the Added field value if set, zero value otherwise.
func (o *SeriesResource) GetAdded() time.Time {
	if o == nil || isNil(o.Added) {
		var ret time.Time
		return ret
	}
	return *o.Added
}

// GetAddedOk returns a tuple with the Added field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetAddedOk() (*time.Time, bool) {
	if o == nil || isNil(o.Added) {
    return nil, false
	}
	return o.Added, true
}

// HasAdded returns a boolean if a field has been set.
func (o *SeriesResource) HasAdded() bool {
	if o != nil && !isNil(o.Added) {
		return true
	}

	return false
}

// SetAdded gets a reference to the given time.Time and assigns it to the Added field.
func (o *SeriesResource) SetAdded(v time.Time) {
	o.Added = &v
}

// GetAddOptions returns the AddOptions field value if set, zero value otherwise.
func (o *SeriesResource) GetAddOptions() AddSeriesOptions {
	if o == nil || isNil(o.AddOptions) {
		var ret AddSeriesOptions
		return ret
	}
	return *o.AddOptions
}

// GetAddOptionsOk returns a tuple with the AddOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetAddOptionsOk() (*AddSeriesOptions, bool) {
	if o == nil || isNil(o.AddOptions) {
    return nil, false
	}
	return o.AddOptions, true
}

// HasAddOptions returns a boolean if a field has been set.
func (o *SeriesResource) HasAddOptions() bool {
	if o != nil && !isNil(o.AddOptions) {
		return true
	}

	return false
}

// SetAddOptions gets a reference to the given AddSeriesOptions and assigns it to the AddOptions field.
func (o *SeriesResource) SetAddOptions(v AddSeriesOptions) {
	o.AddOptions = &v
}

// GetRatings returns the Ratings field value if set, zero value otherwise.
func (o *SeriesResource) GetRatings() Ratings {
	if o == nil || isNil(o.Ratings) {
		var ret Ratings
		return ret
	}
	return *o.Ratings
}

// GetRatingsOk returns a tuple with the Ratings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetRatingsOk() (*Ratings, bool) {
	if o == nil || isNil(o.Ratings) {
    return nil, false
	}
	return o.Ratings, true
}

// HasRatings returns a boolean if a field has been set.
func (o *SeriesResource) HasRatings() bool {
	if o != nil && !isNil(o.Ratings) {
		return true
	}

	return false
}

// SetRatings gets a reference to the given Ratings and assigns it to the Ratings field.
func (o *SeriesResource) SetRatings(v Ratings) {
	o.Ratings = &v
}

// GetStatistics returns the Statistics field value if set, zero value otherwise.
func (o *SeriesResource) GetStatistics() SeriesStatisticsResource {
	if o == nil || isNil(o.Statistics) {
		var ret SeriesStatisticsResource
		return ret
	}
	return *o.Statistics
}

// GetStatisticsOk returns a tuple with the Statistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesResource) GetStatisticsOk() (*SeriesStatisticsResource, bool) {
	if o == nil || isNil(o.Statistics) {
    return nil, false
	}
	return o.Statistics, true
}

// HasStatistics returns a boolean if a field has been set.
func (o *SeriesResource) HasStatistics() bool {
	if o != nil && !isNil(o.Statistics) {
		return true
	}

	return false
}

// SetStatistics gets a reference to the given SeriesStatisticsResource and assigns it to the Statistics field.
func (o *SeriesResource) SetStatistics(v SeriesStatisticsResource) {
	o.Statistics = &v
}

// GetEpisodesChanged returns the EpisodesChanged field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SeriesResource) GetEpisodesChanged() bool {
	if o == nil || isNil(o.EpisodesChanged.Get()) {
		var ret bool
		return ret
	}
	return *o.EpisodesChanged.Get()
}

// GetEpisodesChangedOk returns a tuple with the EpisodesChanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SeriesResource) GetEpisodesChangedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.EpisodesChanged.Get(), o.EpisodesChanged.IsSet()
}

// HasEpisodesChanged returns a boolean if a field has been set.
func (o *SeriesResource) HasEpisodesChanged() bool {
	if o != nil && o.EpisodesChanged.IsSet() {
		return true
	}

	return false
}

// SetEpisodesChanged gets a reference to the given NullableBool and assigns it to the EpisodesChanged field.
func (o *SeriesResource) SetEpisodesChanged(v bool) {
	o.EpisodesChanged.Set(&v)
}
// SetEpisodesChangedNil sets the value for EpisodesChanged to be an explicit nil
func (o *SeriesResource) SetEpisodesChangedNil() {
	o.EpisodesChanged.Set(nil)
}

// UnsetEpisodesChanged ensures that no value is present for EpisodesChanged, not even an explicit nil
func (o *SeriesResource) UnsetEpisodesChanged() {
	o.EpisodesChanged.Unset()
}

// GetLanguageProfileId returns the LanguageProfileId field value if set, zero value otherwise.
// Deprecated
func (o *SeriesResource) GetLanguageProfileId() int32 {
	if o == nil || isNil(o.LanguageProfileId) {
		var ret int32
		return ret
	}
	return *o.LanguageProfileId
}

// GetLanguageProfileIdOk returns a tuple with the LanguageProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *SeriesResource) GetLanguageProfileIdOk() (*int32, bool) {
	if o == nil || isNil(o.LanguageProfileId) {
    return nil, false
	}
	return o.LanguageProfileId, true
}

// HasLanguageProfileId returns a boolean if a field has been set.
func (o *SeriesResource) HasLanguageProfileId() bool {
	if o != nil && !isNil(o.LanguageProfileId) {
		return true
	}

	return false
}

// SetLanguageProfileId gets a reference to the given int32 and assigns it to the LanguageProfileId field.
// Deprecated
func (o *SeriesResource) SetLanguageProfileId(v int32) {
	o.LanguageProfileId = &v
}

func (o SeriesResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.AlternateTitles != nil {
		toSerialize["alternateTitles"] = o.AlternateTitles
	}
	if o.SortTitle.IsSet() {
		toSerialize["sortTitle"] = o.SortTitle.Get()
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Ended) {
		toSerialize["ended"] = o.Ended
	}
	if o.ProfileName.IsSet() {
		toSerialize["profileName"] = o.ProfileName.Get()
	}
	if o.Overview.IsSet() {
		toSerialize["overview"] = o.Overview.Get()
	}
	if o.NextAiring.IsSet() {
		toSerialize["nextAiring"] = o.NextAiring.Get()
	}
	if o.PreviousAiring.IsSet() {
		toSerialize["previousAiring"] = o.PreviousAiring.Get()
	}
	if o.Network.IsSet() {
		toSerialize["network"] = o.Network.Get()
	}
	if o.AirTime.IsSet() {
		toSerialize["airTime"] = o.AirTime.Get()
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	if !isNil(o.OriginalLanguage) {
		toSerialize["originalLanguage"] = o.OriginalLanguage
	}
	if o.RemotePoster.IsSet() {
		toSerialize["remotePoster"] = o.RemotePoster.Get()
	}
	if o.Seasons != nil {
		toSerialize["seasons"] = o.Seasons
	}
	if !isNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	if o.Path.IsSet() {
		toSerialize["path"] = o.Path.Get()
	}
	if !isNil(o.QualityProfileId) {
		toSerialize["qualityProfileId"] = o.QualityProfileId
	}
	if !isNil(o.SeasonFolder) {
		toSerialize["seasonFolder"] = o.SeasonFolder
	}
	if !isNil(o.Monitored) {
		toSerialize["monitored"] = o.Monitored
	}
	if !isNil(o.UseSceneNumbering) {
		toSerialize["useSceneNumbering"] = o.UseSceneNumbering
	}
	if !isNil(o.Runtime) {
		toSerialize["runtime"] = o.Runtime
	}
	if !isNil(o.TvdbId) {
		toSerialize["tvdbId"] = o.TvdbId
	}
	if !isNil(o.TvRageId) {
		toSerialize["tvRageId"] = o.TvRageId
	}
	if !isNil(o.TvMazeId) {
		toSerialize["tvMazeId"] = o.TvMazeId
	}
	if o.FirstAired.IsSet() {
		toSerialize["firstAired"] = o.FirstAired.Get()
	}
	if !isNil(o.SeriesType) {
		toSerialize["seriesType"] = o.SeriesType
	}
	if o.CleanTitle.IsSet() {
		toSerialize["cleanTitle"] = o.CleanTitle.Get()
	}
	if o.ImdbId.IsSet() {
		toSerialize["imdbId"] = o.ImdbId.Get()
	}
	if o.TitleSlug.IsSet() {
		toSerialize["titleSlug"] = o.TitleSlug.Get()
	}
	if o.RootFolderPath.IsSet() {
		toSerialize["rootFolderPath"] = o.RootFolderPath.Get()
	}
	if o.Folder.IsSet() {
		toSerialize["folder"] = o.Folder.Get()
	}
	if o.Certification.IsSet() {
		toSerialize["certification"] = o.Certification.Get()
	}
	if o.Genres != nil {
		toSerialize["genres"] = o.Genres
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if !isNil(o.Added) {
		toSerialize["added"] = o.Added
	}
	if !isNil(o.AddOptions) {
		toSerialize["addOptions"] = o.AddOptions
	}
	if !isNil(o.Ratings) {
		toSerialize["ratings"] = o.Ratings
	}
	if !isNil(o.Statistics) {
		toSerialize["statistics"] = o.Statistics
	}
	if o.EpisodesChanged.IsSet() {
		toSerialize["episodesChanged"] = o.EpisodesChanged.Get()
	}
	if !isNil(o.LanguageProfileId) {
		toSerialize["languageProfileId"] = o.LanguageProfileId
	}
	return json.Marshal(toSerialize)
}

type NullableSeriesResource struct {
	value *SeriesResource
	isSet bool
}

func (v NullableSeriesResource) Get() *SeriesResource {
	return v.value
}

func (v *NullableSeriesResource) Set(val *SeriesResource) {
	v.value = val
	v.isSet = true
}

func (v NullableSeriesResource) IsSet() bool {
	return v.isSet
}

func (v *NullableSeriesResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeriesResource(val *SeriesResource) *NullableSeriesResource {
	return &NullableSeriesResource{value: val, isSet: true}
}

func (v NullableSeriesResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeriesResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


